---
import { getTranslations, type Lang } from "../../data/i18n";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const locales = ["es", "en"];

  return locales.map((lang) => ({
    params: { lang },
  }));
}

const lang = (Astro.url.pathname.split("/")[1] as Lang) || "en";
const t = getTranslations(lang);

let message = { text: "", type: "" };
let formData = { name: "", email: "", subject: "", message: "" };

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    formData = {
      name: data.get("name")?.toString() || "",
      email: data.get("email")?.toString() || "",
      subject: data.get("subject")?.toString() || "",
      message: data.get("message")?.toString() || "",
    };

    // Validación básica
    if (!formData.name || !formData.email || !formData.message) {
      throw new Error("Faltan campos requeridos");
    }

    // Aquí iría la lógica para enviar el correo o guardar en base de datos
    // Por ahora simulamos un envío exitoso
    message = {
      text: t.contact.successMessage,
      type: "success",
    };

    // Resetear el formulario después de 3 segundos
    setTimeout(() => {
      formData = { name: "", email: "", subject: "", message: "" };
      message = { text: "", type: "" };
    }, 3000);
  } catch (error) {
    message = {
      text: error instanceof Error ? error.message : t.contact.errorMessage,
      type: "error",
    };
  }
}
---

<BaseLayout title={t.contact.title} description={t.contact.description}>
  <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">
    {t.contact.title}
  </h2>

  <p class="text-gray-600 dark:text-gray-300 mb-8">
    {t.contact.description}
  </p>

  <form method="POST" class="space-y-6 w-4xl">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <!-- Nombre -->
      <div>
        <label
          for="name"
          class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
        >
          {t.contact.form.name}
        </label>
        <input
          type="text"
          id="name"
          name="name"
          value={formData.name}
          required
          class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 dark:focus:ring-purple-600 dark:bg-gray-700 dark:text-white"
        />
      </div>

      <!-- Email -->
      <div>
        <label
          for="email"
          class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
        >
          {t.contact.form.email}
        </label>
        <input
          type="email"
          id="email"
          name="email"
          value={formData.email}
          required
          class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 dark:focus:ring-purple-600 dark:bg-gray-700 dark:text-white"
        />
      </div>
    </div>

    <!-- Asunto -->
    <div>
      <label
        for="subject"
        class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
      >
        {t.contact.form.subject}
      </label>
      <input
        type="text"
        id="subject"
        name="subject"
        value={formData.subject}
        class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 dark:focus:ring-purple-600 dark:bg-gray-700 dark:text-white"
      />
    </div>

    <!-- Mensaje -->
    <div>
      <label
        for="message"
        class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1"
      >
        {t.contact.form.message}
      </label>
      <textarea
        id="message"
        name="message"
        rows={5}
        required
        class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 dark:focus:ring-purple-600 dark:bg-gray-700 dark:text-white"
      >
        {formData.message}
      </textarea>
    </div>

    <!-- Botón de envío -->
    <div class="pt-2">
      <button
        type="submit"
        class="w-full md:w-auto cursor-pointer px-6 py-3 bg-purple-600 hover:bg-purple-700 dark:bg-purple-800 dark:hover:bg-purple-900 text-white font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"
      >
        {t.contact.form.submit}
      </button>
    </div>
  </form>

  <!-- Mensaje de éxito/error -->
  {
    message.text && (
      <div
        class={`mt-4 p-4 rounded-lg ${
          message.type === "success"
            ? "bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300"
            : "bg-red-100 text-red-700 dark:bg-red-900/20 dark:text-red-300"
        }`}
      >
        {message.text}
      </div>
    )
  }
</BaseLayout>
<style>
  textarea {
    min-height: 150px;
    resize: none;
  }
</style>
