[["Map",1,2,9,10,457,458],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.8.0","content-config-digest","508e44f81cba9a38","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://alkiory.web.app\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"i18n\":{\"defaultLocale\":\"en\",\"locales\":[\"es\",\"en\"],\"routing\":{\"prefixDefaultLocale\":true,\"redirectToDefaultLocale\":true,\"fallbackType\":\"redirect\"}},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,61,62,126,127,204,205,240,241,279,280,326,327,388,389],"en/desmitificando-los-patrones-de-diseno",{"id":11,"data":13,"body":25,"filePath":26,"digest":27,"rendered":28,"legacyId":60},{"title":14,"description":15,"publishDate":16,"tags":17,"img":23,"img_alt":24},"Demystifying Design Patterns in JavaScript and TypeScript","Design patterns play a crucial role. However, their implementation in JavaScript and TypeScript often raises concerns and confusion.\n",["Date","2024-01-05T00:00:00.000Z"],[18,19,20,21,22],"TypeScript","JavaScript","Design Patterns","Architecture","Clean Code","https://cdn.pixabay.com/photo/2021/01/03/13/51/lego-5884582_1280.jpg","Demystifying Design Patterns in JavaScript and TypeScript by sergio campbell dev","##### Introduction\n\nIn the vast realm of software development, design patterns play a crucial role. However, their implementation in JavaScript and TypeScript often raises concerns and confusion. In this article, we will demystify these patterns, exploring their practical application and how they can enhance code quality.\n\n##### Design Patterns in JavaScript and TypeScript\n\nWe will delve into some of the most essential design patterns, such as Singleton, Observer, and Factory, breaking down their utility and providing clear examples in both languages. Additionally, we'll discuss how these patterns can improve code readability and facilitate long-term maintenance.\n\n##### Clean Code in Action\n\nWriting clean code is a fundamental skill for any developer. Throughout the article, we'll share practical tips on how to apply Robert C. Martin's \"Clean Code\" principles in JavaScript and TypeScript projects. From variable management to function structure, we'll guide you to achieve more understandable and maintainable code.\n\n##### Efficient Data Architecture\n\nThe efficiency of an application largely depends on its data architecture. We will explore how to design efficient data structures in the context of JavaScript and TypeScript, highlighting key differences and providing examples that enhance performance and scalability.\n\n##### Creating Content for Everyone\n\nAdemás de abordar aspectos técnicos, dedicaremos un segmento a la creación de contenido inclusivo. ¿Cómo explicar conceptos complejos a colegas no programadores? Compartiremos estrategias para comunicar eficazmente ideas técnicas a audiencias diversas, mejorando la colaboración en equipos multidisciplinarios.\n\n##### In summary\n\nIn summary, this article aims to unravel the mysteries of design patterns, promote the writing of clean and efficient code, and encourage the creation of accessible content. By implementing these concepts, we not only improve our skills as developers but also contribute to a more collaborative and efficient development environment.\n\n##### Share Your Experience\n\nHave you faced challenges when applying design patterns in your projects? Do you have any advice on writing clean code? Share your experience in the comments and join the conversation. Share this article on your networks to help other developers reach their full potential!\n\n*Together, we build better code!*","src/content/blog/en/Desmitificando-los-Patrones-de-Diseno.md","42592528878f790a",{"html":29,"metadata":30},"\u003Ch5 id=\"introduction\">Introduction\u003C/h5>\n\u003Cp>In the vast realm of software development, design patterns play a crucial role. However, their implementation in JavaScript and TypeScript often raises concerns and confusion. In this article, we will demystify these patterns, exploring their practical application and how they can enhance code quality.\u003C/p>\n\u003Ch5 id=\"design-patterns-in-javascript-and-typescript\">Design Patterns in JavaScript and TypeScript\u003C/h5>\n\u003Cp>We will delve into some of the most essential design patterns, such as Singleton, Observer, and Factory, breaking down their utility and providing clear examples in both languages. Additionally, we’ll discuss how these patterns can improve code readability and facilitate long-term maintenance.\u003C/p>\n\u003Ch5 id=\"clean-code-in-action\">Clean Code in Action\u003C/h5>\n\u003Cp>Writing clean code is a fundamental skill for any developer. Throughout the article, we’ll share practical tips on how to apply Robert C. Martin’s “Clean Code” principles in JavaScript and TypeScript projects. From variable management to function structure, we’ll guide you to achieve more understandable and maintainable code.\u003C/p>\n\u003Ch5 id=\"efficient-data-architecture\">Efficient Data Architecture\u003C/h5>\n\u003Cp>The efficiency of an application largely depends on its data architecture. We will explore how to design efficient data structures in the context of JavaScript and TypeScript, highlighting key differences and providing examples that enhance performance and scalability.\u003C/p>\n\u003Ch5 id=\"creating-content-for-everyone\">Creating Content for Everyone\u003C/h5>\n\u003Cp>Además de abordar aspectos técnicos, dedicaremos un segmento a la creación de contenido inclusivo. ¿Cómo explicar conceptos complejos a colegas no programadores? Compartiremos estrategias para comunicar eficazmente ideas técnicas a audiencias diversas, mejorando la colaboración en equipos multidisciplinarios.\u003C/p>\n\u003Ch5 id=\"in-summary\">In summary\u003C/h5>\n\u003Cp>In summary, this article aims to unravel the mysteries of design patterns, promote the writing of clean and efficient code, and encourage the creation of accessible content. By implementing these concepts, we not only improve our skills as developers but also contribute to a more collaborative and efficient development environment.\u003C/p>\n\u003Ch5 id=\"share-your-experience\">Share Your Experience\u003C/h5>\n\u003Cp>Have you faced challenges when applying design patterns in your projects? Do you have any advice on writing clean code? Share your experience in the comments and join the conversation. Share this article on your networks to help other developers reach their full potential!\u003C/p>\n\u003Cp>\u003Cem>Together, we build better code!\u003C/em>\u003C/p>",{"headings":31,"localImagePaths":54,"remoteImagePaths":55,"frontmatter":56,"imagePaths":59},[32,36,39,42,45,48,51],{"depth":33,"slug":34,"text":35},5,"introduction","Introduction",{"depth":33,"slug":37,"text":38},"design-patterns-in-javascript-and-typescript","Design Patterns in JavaScript and TypeScript",{"depth":33,"slug":40,"text":41},"clean-code-in-action","Clean Code in Action",{"depth":33,"slug":43,"text":44},"efficient-data-architecture","Efficient Data Architecture",{"depth":33,"slug":46,"text":47},"creating-content-for-everyone","Creating Content for Everyone",{"depth":33,"slug":49,"text":50},"in-summary","In summary",{"depth":33,"slug":52,"text":53},"share-your-experience","Share Your Experience",[],[],{"title":14,"publishDate":57,"img":23,"img_alt":24,"description":15,"tags":58},["Date","2024-01-05T00:00:00.000Z"],[18,19,20,21,22],[],"en/Desmitificando-los-Patrones-de-Diseno.md","en/exploring-variety-js-frameworks",{"id":61,"data":63,"body":74,"filePath":75,"digest":76,"rendered":77,"legacyId":125},{"title":64,"description":65,"publishDate":66,"tags":67,"img":72,"img_alt":73},"Exploring the Variety of JavaScript Frameworks and Libraries and Their Influence on Software Development","JavaScript is a versatile and powerful language that has become a cornerstone of modern web development. Its ecosystem is vast, with a plethora of frameworks and libraries that have revolutionized the way developers build applications. In this article, we will explore some of the most popular JavaScript frameworks and libraries, and discuss how they influence software development.\n",["Date","2024-07-18T00:00:00.000Z"],[19,68,69,70,71],"Software Development","Framework","Communication","Blog","https://cdn.pixabay.com/photo/2018/01/25/08/14/aisle-3105629_1280.jpg","Exploring the Variety of JavaScript Frameworks and Libraries and Their Influence on Software Development by sergio campbell dev","### Exploring the Variety of JavaScript Frameworks and Libraries and Their Influence on Software Development\n\n---\n\nJavaScript is a versatile and powerful language that has become a cornerstone of modern web development. Its ecosystem is vast, with a plethora of frameworks and libraries that have revolutionized the way developers build applications. In this article, we will explore some of the most popular JavaScript frameworks and libraries, and discuss how they influence software development.\n\n### Popular JavaScript Frameworks and Libraries\n\n#### 1. React\n\n- **Overview:** Developed and maintained by Facebook, React is a library for building user interfaces, particularly single-page applications where data changes over time.\n- **Key Features:**\n  - Component-based architecture\n  - Virtual DOM for efficient updates\n  - Extensive ecosystem with tools like Redux and React Router\n- **Influence:** React's approach to component-based development has set a new standard for building UIs, promoting reusability and maintainability. It has a huge community and a wealth of third-party libraries and tools.\n\n#### 2. Angular\n\n- **Overview:** Maintained by Google, Angular is a full-fledged framework for building dynamic web applications. It uses TypeScript, a statically typed superset of JavaScript.\n- **Key Features:**\n  - Two-way data binding\n  - Dependency injection\n  - Comprehensive tooling with Angular CLI\n- **Influence:** Angular's comprehensive nature makes it a go-to choice for large-scale applications. Its strict structure and powerful features have influenced best practices in enterprise-level application development.\n\n#### 3. Vue.js\n\n- **Overview:** Created by Evan You, Vue.js is a progressive framework for building user interfaces. It is designed to be incrementally adoptable.\n- **Key Features:**\n  - Reactive data binding\n  - Component-based development\n  - Simple integration with other projects and libraries\n- **Influence:** Vue's simplicity and flexibility make it a popular choice for both small projects and large applications. It has a growing community and is praised for its gentle learning curve.\n\n#### 4. Node.js\n\n- **Overview:** Node.js is a runtime environment that allows JavaScript to be used for server-side scripting, enabling the development of scalable network applications.\n- **Key Features:**\n  - Non-blocking, event-driven architecture\n  - NPM (Node Package Manager) for managing packages\n  - Extensive ecosystem with frameworks like Express.js\n- **Influence:** Node.js has expanded JavaScript's use beyond the browser, allowing developers to use a single language for both client-side and server-side development. This has led to the rise of full-stack JavaScript development.\n\n### How Frameworks and Libraries Influence Software Development\n\n#### 1. Accelerating Development\n\nFrameworks and libraries provide pre-built components and tools that simplify and speed up the development process. For example, React's component-based architecture allows developers to build reusable components, reducing redundancy and speeding up development.\n\n#### 2. Standardizing Best Practices\n\nFrameworks like Angular enforce a structured approach to development, which helps in maintaining consistency and quality across large teams. This standardization of best practices ensures that codebases are more maintainable and scalable.\n\n#### 3. Enhancing Performance\n\nMany frameworks and libraries come with performance optimizations out-of-the-box. React's virtual DOM, for instance, minimizes direct manipulation of the real DOM, leading to faster updates and better performance in complex applications.\n\n#### 4. Promoting Community and Ecosystem Growth\n\nThe popularity of frameworks and libraries fosters large, active communities. These communities contribute to a rich ecosystem of plugins, extensions, and tools that further enhance development capabilities. For example, the extensive collection of middleware and plugins available for Express.js makes it easier to build robust Node.js applications.\n\n#### 5. Enabling Full-Stack Development\n\nWith the advent of frameworks like Node.js, JavaScript has become a language that can be used across the entire stack, from client-side scripting to server-side logic and even database interactions (e.g., using MongoDB). This unification simplifies the development process and allows for more cohesive development teams.\n\n### In summary\n\nJavaScript frameworks and libraries have profoundly influenced software development by providing tools and patterns that enhance productivity, performance, and scalability. Whether you are building a small personal project or a large enterprise application, leveraging these frameworks and libraries can help you achieve your development goals more efficiently.\n\nAs the JavaScript ecosystem continues to evolve, staying informed about the latest trends and advancements will ensure that you can take full advantage of these powerful tools in your development projects.\n\n---\n\n*Sources:*\n\n1. [React Official Documentation](https://reactjs.org/docs/getting-started.html)\n2. [Angular Official Documentation](https://angular.io/docs)\n3. [Vue.js Official Documentation](https://vuejs.org/v2/guide/)\n4. [Node.js Official Documentation](https://nodejs.org/en/docs/)","src/content/blog/en/Exploring-variety-js-frameworks.md","bbf839dc6d28d689",{"html":78,"metadata":79},"\u003Ch3 id=\"exploring-the-variety-of-javascript-frameworks-and-libraries-and-their-influence-on-software-development\">Exploring the Variety of JavaScript Frameworks and Libraries and Their Influence on Software Development\u003C/h3>\n\u003Chr>\n\u003Cp>JavaScript is a versatile and powerful language that has become a cornerstone of modern web development. Its ecosystem is vast, with a plethora of frameworks and libraries that have revolutionized the way developers build applications. In this article, we will explore some of the most popular JavaScript frameworks and libraries, and discuss how they influence software development.\u003C/p>\n\u003Ch3 id=\"popular-javascript-frameworks-and-libraries\">Popular JavaScript Frameworks and Libraries\u003C/h3>\n\u003Ch4 id=\"1-react\">1. React\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Overview:\u003C/strong> Developed and maintained by Facebook, React is a library for building user interfaces, particularly single-page applications where data changes over time.\u003C/li>\n\u003Cli>\u003Cstrong>Key Features:\u003C/strong>\n\u003Cul>\n\u003Cli>Component-based architecture\u003C/li>\n\u003Cli>Virtual DOM for efficient updates\u003C/li>\n\u003Cli>Extensive ecosystem with tools like Redux and React Router\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Influence:\u003C/strong> React’s approach to component-based development has set a new standard for building UIs, promoting reusability and maintainability. It has a huge community and a wealth of third-party libraries and tools.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-angular\">2. Angular\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Overview:\u003C/strong> Maintained by Google, Angular is a full-fledged framework for building dynamic web applications. It uses TypeScript, a statically typed superset of JavaScript.\u003C/li>\n\u003Cli>\u003Cstrong>Key Features:\u003C/strong>\n\u003Cul>\n\u003Cli>Two-way data binding\u003C/li>\n\u003Cli>Dependency injection\u003C/li>\n\u003Cli>Comprehensive tooling with Angular CLI\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Influence:\u003C/strong> Angular’s comprehensive nature makes it a go-to choice for large-scale applications. Its strict structure and powerful features have influenced best practices in enterprise-level application development.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-vuejs\">3. Vue.js\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Overview:\u003C/strong> Created by Evan You, Vue.js is a progressive framework for building user interfaces. It is designed to be incrementally adoptable.\u003C/li>\n\u003Cli>\u003Cstrong>Key Features:\u003C/strong>\n\u003Cul>\n\u003Cli>Reactive data binding\u003C/li>\n\u003Cli>Component-based development\u003C/li>\n\u003Cli>Simple integration with other projects and libraries\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Influence:\u003C/strong> Vue’s simplicity and flexibility make it a popular choice for both small projects and large applications. It has a growing community and is praised for its gentle learning curve.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"4-nodejs\">4. Node.js\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Overview:\u003C/strong> Node.js is a runtime environment that allows JavaScript to be used for server-side scripting, enabling the development of scalable network applications.\u003C/li>\n\u003Cli>\u003Cstrong>Key Features:\u003C/strong>\n\u003Cul>\n\u003Cli>Non-blocking, event-driven architecture\u003C/li>\n\u003Cli>NPM (Node Package Manager) for managing packages\u003C/li>\n\u003Cli>Extensive ecosystem with frameworks like Express.js\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Cstrong>Influence:\u003C/strong> Node.js has expanded JavaScript’s use beyond the browser, allowing developers to use a single language for both client-side and server-side development. This has led to the rise of full-stack JavaScript development.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"how-frameworks-and-libraries-influence-software-development\">How Frameworks and Libraries Influence Software Development\u003C/h3>\n\u003Ch4 id=\"1-accelerating-development\">1. Accelerating Development\u003C/h4>\n\u003Cp>Frameworks and libraries provide pre-built components and tools that simplify and speed up the development process. For example, React’s component-based architecture allows developers to build reusable components, reducing redundancy and speeding up development.\u003C/p>\n\u003Ch4 id=\"2-standardizing-best-practices\">2. Standardizing Best Practices\u003C/h4>\n\u003Cp>Frameworks like Angular enforce a structured approach to development, which helps in maintaining consistency and quality across large teams. This standardization of best practices ensures that codebases are more maintainable and scalable.\u003C/p>\n\u003Ch4 id=\"3-enhancing-performance\">3. Enhancing Performance\u003C/h4>\n\u003Cp>Many frameworks and libraries come with performance optimizations out-of-the-box. React’s virtual DOM, for instance, minimizes direct manipulation of the real DOM, leading to faster updates and better performance in complex applications.\u003C/p>\n\u003Ch4 id=\"4-promoting-community-and-ecosystem-growth\">4. Promoting Community and Ecosystem Growth\u003C/h4>\n\u003Cp>The popularity of frameworks and libraries fosters large, active communities. These communities contribute to a rich ecosystem of plugins, extensions, and tools that further enhance development capabilities. For example, the extensive collection of middleware and plugins available for Express.js makes it easier to build robust Node.js applications.\u003C/p>\n\u003Ch4 id=\"5-enabling-full-stack-development\">5. Enabling Full-Stack Development\u003C/h4>\n\u003Cp>With the advent of frameworks like Node.js, JavaScript has become a language that can be used across the entire stack, from client-side scripting to server-side logic and even database interactions (e.g., using MongoDB). This unification simplifies the development process and allows for more cohesive development teams.\u003C/p>\n\u003Ch3 id=\"in-summary\">In summary\u003C/h3>\n\u003Cp>JavaScript frameworks and libraries have profoundly influenced software development by providing tools and patterns that enhance productivity, performance, and scalability. Whether you are building a small personal project or a large enterprise application, leveraging these frameworks and libraries can help you achieve your development goals more efficiently.\u003C/p>\n\u003Cp>As the JavaScript ecosystem continues to evolve, staying informed about the latest trends and advancements will ensure that you can take full advantage of these powerful tools in your development projects.\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Sources:\u003C/em>\u003C/p>\n\u003Col>\n\u003Cli>\u003Ca href=\"https://reactjs.org/docs/getting-started.html\">React Official Documentation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://angular.io/docs\">Angular Official Documentation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://vuejs.org/v2/guide/\">Vue.js Official Documentation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://nodejs.org/en/docs/\">Node.js Official Documentation\u003C/a>\u003C/li>\n\u003C/ol>",{"headings":80,"localImagePaths":119,"remoteImagePaths":120,"frontmatter":121,"imagePaths":124},[81,84,87,91,94,97,100,103,106,109,112,115,118],{"depth":82,"slug":83,"text":64},3,"exploring-the-variety-of-javascript-frameworks-and-libraries-and-their-influence-on-software-development",{"depth":82,"slug":85,"text":86},"popular-javascript-frameworks-and-libraries","Popular JavaScript Frameworks and Libraries",{"depth":88,"slug":89,"text":90},4,"1-react","1. React",{"depth":88,"slug":92,"text":93},"2-angular","2. Angular",{"depth":88,"slug":95,"text":96},"3-vuejs","3. Vue.js",{"depth":88,"slug":98,"text":99},"4-nodejs","4. Node.js",{"depth":82,"slug":101,"text":102},"how-frameworks-and-libraries-influence-software-development","How Frameworks and Libraries Influence Software Development",{"depth":88,"slug":104,"text":105},"1-accelerating-development","1. Accelerating Development",{"depth":88,"slug":107,"text":108},"2-standardizing-best-practices","2. Standardizing Best Practices",{"depth":88,"slug":110,"text":111},"3-enhancing-performance","3. Enhancing Performance",{"depth":88,"slug":113,"text":114},"4-promoting-community-and-ecosystem-growth","4. Promoting Community and Ecosystem Growth",{"depth":88,"slug":116,"text":117},"5-enabling-full-stack-development","5. Enabling Full-Stack Development",{"depth":82,"slug":49,"text":50},[],[],{"title":64,"publishDate":122,"img":72,"img_alt":73,"description":65,"tags":123},["Date","2024-07-18T00:00:00.000Z"],[19,68,69,70,71],[],"en/Exploring-variety-js-frameworks.md","en/how-to-avoid-burnout",{"id":126,"data":128,"body":136,"filePath":137,"digest":138,"rendered":139,"legacyId":203},{"title":129,"description":130,"publishDate":131,"tags":132,"img":134,"img_alt":135},"Understanding and Preventing Burnout Strategies for Managing Stress in Remote Work","Burnout is a state of physical, emotional, and mental exhaustion caused by prolonged stress. It can significantly impact productivity, job satisfaction, and overall well-being.",["Date","2024-10-13T00:00:00.000Z"],[71,133,70],"Daily","https://cdn.pixabay.com/photo/2018/03/27/21/44/match-3267506_960_720.jpg","Burnout symbology","### Understanding and Preventing Burnout: Strategies for Managing Stress in Remote Work for Programmers\n\n---\n\nBurnout is a state of physical, emotional, and mental exhaustion caused by prolonged stress. It can significantly impact productivity, job satisfaction, and overall well-being. With the rise of remote work, preventing and managing burnout has become more crucial than ever, particularly for programmers who often face high demands and tight deadlines. This article will explore how to recognize, prevent, and handle burnout calmly, with practical tips for managing stress in remote programming jobs.\n\n### Recognizing Burnout\n\nBurnout doesn't happen overnight. It often starts with subtle signs that, if ignored, can escalate into more severe symptoms. Key indicators include:\n\n- **Physical Symptoms:** Chronic fatigue, headaches, insomnia, or frequent illness.\n- **Emotional Symptoms:** Feelings of helplessness, cynicism, detachment, or decreased satisfaction.\n- **Behavioral Symptoms:** Decreased productivity, procrastination, increased absenteeism, or withdrawal from responsibilities.\n\n### Preventing Burnout\n\nPreventing burnout requires proactive measures to manage stress and maintain a healthy work-life balance. Here are some strategies:\n\n#### 1. Establish Clear Boundaries\n\n- **Set Work Hours:** Define specific work hours and stick to them. Avoid working late into the night or on weekends.\n- **Create a Dedicated Workspace:** Having a separate space for work can help mentally separate professional tasks from personal life.\n\n#### 2. Prioritize Self-Care\n\n- **Regular Breaks:** Take short breaks throughout the day to rest and recharge. Use techniques like the Pomodoro Technique to manage time effectively.\n- **Exercise:** Incorporate physical activity into your routine to reduce stress and improve overall health.\n- **Healthy Diet:** Maintain a balanced diet and stay hydrated to keep your energy levels up.\n\n#### 3. Manage Workload\n\n- **Delegate Tasks:** Don't hesitate to delegate tasks when necessary. Collaboration can lighten your load and enhance team productivity.\n- **Set Realistic Goals:** Break tasks into manageable chunks and set achievable goals. Avoid overcommitting or setting unrealistic deadlines.\n\n#### 4. Stay Connected\n\n- **Communicate Regularly:** Stay in touch with colleagues through regular check-ins and virtual meetings. Communication can prevent feelings of isolation.\n- **Seek Support:** Don’t hesitate to seek support from managers or HR if you're feeling overwhelmed. Many organizations offer employee assistance programs.\n\n### Handling Burnout Calmly\n\nIf you find yourself experiencing burnout, it's important to address it calmly and effectively. Here’s how:\n\n#### 1. Acknowledge Your Feelings\n\n- **Acceptance:** Recognize that you're experiencing burnout. Acceptance is the first step toward recovery.\n- **Express Emotions:** Talk about your feelings with trusted friends, family, or colleagues. Sometimes, simply sharing your experience can provide relief.\n\n#### 2. Take a Step Back\n\n- **Take Time Off:** If possible, take a short break or vacation to rest and recharge. Use this time to focus on activities that bring you joy.\n- **Reflect:** Use this time to reflect on the factors contributing to your burnout and consider what changes you can make to your work routine.\n\n#### 3. Develop a Recovery Plan\n\n- **Identify Triggers:** Identify the main stressors in your work life and develop strategies to address them.\n- **Implement Changes:** Gradually implement changes to your work routine, such as setting boundaries, delegating tasks, or prioritizing self-care.\n\n### Tips for Managing Burnout in Remote Programming Jobs\n\nRemote programming jobs present unique challenges, but with the right approach, you can effectively manage burnout:\n\n#### 1. Create a Structured Routine\n\n- **Consistent Schedule:** Maintain a consistent daily schedule, including start and end times, breaks, and meals.\n- **Morning Routine:** Develop a morning routine to transition smoothly from personal time to work mode.\n\n#### 2. Leverage Technology\n\n- **Productivity Tools:** Use tools like task managers (Trello, Asana), time trackers (Toggl, Clockify), and communication platforms (Slack, Zoom) to stay organized and efficient.\n- **Wellness Apps:** Explore wellness apps (Headspace, Calm) that offer guided meditations, breathing exercises, and other stress-relief activities.\n\n#### 3. Foster a Positive Work Environment\n\n- **Virtual Social Events:** Participate in virtual social events and team-building activities to foster connections with colleagues.\n- **Positive Work Culture:** Encourage a positive work culture by recognizing achievements, offering support, and promoting open communication.\n\n#### 4. Enhance Work-Life Balance\n\n- **Flexibility:** Take advantage of the flexibility remote work offers by scheduling work around your most productive times.\n- **Personal Time:** Schedule personal activities and hobbies to ensure you have time to relax and recharge outside of work.\n\n#### 5. Seek Professional Development\n\n- **Skill Improvement:** Engage in continuous learning through online courses (Coursera, Udemy) to stay motivated and enhance your skills.\n- **Career Growth:** Set professional development goals and work towards achieving them, which can provide a sense of accomplishment and purpose.\n\n### Summary\n\nBurnout is a serious issue that can affect anyone, especially in the demanding field of software development and remote work environments. By recognizing the signs of burnout, implementing preventive measures, and calmly addressing it when it occurs, you can maintain your well-being and productivity. Remember, taking care of yourself is not just beneficial for you but also essential for your overall effectiveness and success in the workplace.\n\n---\n\n*Sources:*\n\n1. [Mayo Clinic: Job Burnout: How to Spot It and Take Action](https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/burnout/art-20046642)\n2. [World Health Organization: Burn-out an \"Occupational Phenomenon\": International Classification of Diseases](https://www.who.int/news/item/28-05-2019-burn-out-an-occupational-phenomenon-international-classification-of-diseases)\n3. [Harvard Business Review: How to Avoid Burnout in a Remote Work Environment](https://hbr.org/2020/04/how-to-avoid-wfh-burnout)\n4. [6 Causes of burnout and how to avoid them](https://hbr.org/2019/07/6-causes-of-burnout-and-how-to-avoid-them)\n\nThese sources provide comprehensive information about burnout, its prevention, and management strategies, particularly in the context of remote work for programmers.","src/content/blog/en/How-to-avoid-burnout.md","fc9e8aba546a1f01",{"html":140,"metadata":141},"\u003Ch3 id=\"understanding-and-preventing-burnout-strategies-for-managing-stress-in-remote-work-for-programmers\">Understanding and Preventing Burnout: Strategies for Managing Stress in Remote Work for Programmers\u003C/h3>\n\u003Chr>\n\u003Cp>Burnout is a state of physical, emotional, and mental exhaustion caused by prolonged stress. It can significantly impact productivity, job satisfaction, and overall well-being. With the rise of remote work, preventing and managing burnout has become more crucial than ever, particularly for programmers who often face high demands and tight deadlines. This article will explore how to recognize, prevent, and handle burnout calmly, with practical tips for managing stress in remote programming jobs.\u003C/p>\n\u003Ch3 id=\"recognizing-burnout\">Recognizing Burnout\u003C/h3>\n\u003Cp>Burnout doesn’t happen overnight. It often starts with subtle signs that, if ignored, can escalate into more severe symptoms. Key indicators include:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Physical Symptoms:\u003C/strong> Chronic fatigue, headaches, insomnia, or frequent illness.\u003C/li>\n\u003Cli>\u003Cstrong>Emotional Symptoms:\u003C/strong> Feelings of helplessness, cynicism, detachment, or decreased satisfaction.\u003C/li>\n\u003Cli>\u003Cstrong>Behavioral Symptoms:\u003C/strong> Decreased productivity, procrastination, increased absenteeism, or withdrawal from responsibilities.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"preventing-burnout\">Preventing Burnout\u003C/h3>\n\u003Cp>Preventing burnout requires proactive measures to manage stress and maintain a healthy work-life balance. Here are some strategies:\u003C/p>\n\u003Ch4 id=\"1-establish-clear-boundaries\">1. Establish Clear Boundaries\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Set Work Hours:\u003C/strong> Define specific work hours and stick to them. Avoid working late into the night or on weekends.\u003C/li>\n\u003Cli>\u003Cstrong>Create a Dedicated Workspace:\u003C/strong> Having a separate space for work can help mentally separate professional tasks from personal life.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-prioritize-self-care\">2. Prioritize Self-Care\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Regular Breaks:\u003C/strong> Take short breaks throughout the day to rest and recharge. Use techniques like the Pomodoro Technique to manage time effectively.\u003C/li>\n\u003Cli>\u003Cstrong>Exercise:\u003C/strong> Incorporate physical activity into your routine to reduce stress and improve overall health.\u003C/li>\n\u003Cli>\u003Cstrong>Healthy Diet:\u003C/strong> Maintain a balanced diet and stay hydrated to keep your energy levels up.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-manage-workload\">3. Manage Workload\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Delegate Tasks:\u003C/strong> Don’t hesitate to delegate tasks when necessary. Collaboration can lighten your load and enhance team productivity.\u003C/li>\n\u003Cli>\u003Cstrong>Set Realistic Goals:\u003C/strong> Break tasks into manageable chunks and set achievable goals. Avoid overcommitting or setting unrealistic deadlines.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"4-stay-connected\">4. Stay Connected\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Communicate Regularly:\u003C/strong> Stay in touch with colleagues through regular check-ins and virtual meetings. Communication can prevent feelings of isolation.\u003C/li>\n\u003Cli>\u003Cstrong>Seek Support:\u003C/strong> Don’t hesitate to seek support from managers or HR if you’re feeling overwhelmed. Many organizations offer employee assistance programs.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"handling-burnout-calmly\">Handling Burnout Calmly\u003C/h3>\n\u003Cp>If you find yourself experiencing burnout, it’s important to address it calmly and effectively. Here’s how:\u003C/p>\n\u003Ch4 id=\"1-acknowledge-your-feelings\">1. Acknowledge Your Feelings\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Acceptance:\u003C/strong> Recognize that you’re experiencing burnout. Acceptance is the first step toward recovery.\u003C/li>\n\u003Cli>\u003Cstrong>Express Emotions:\u003C/strong> Talk about your feelings with trusted friends, family, or colleagues. Sometimes, simply sharing your experience can provide relief.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-take-a-step-back\">2. Take a Step Back\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Take Time Off:\u003C/strong> If possible, take a short break or vacation to rest and recharge. Use this time to focus on activities that bring you joy.\u003C/li>\n\u003Cli>\u003Cstrong>Reflect:\u003C/strong> Use this time to reflect on the factors contributing to your burnout and consider what changes you can make to your work routine.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-develop-a-recovery-plan\">3. Develop a Recovery Plan\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Identify Triggers:\u003C/strong> Identify the main stressors in your work life and develop strategies to address them.\u003C/li>\n\u003Cli>\u003Cstrong>Implement Changes:\u003C/strong> Gradually implement changes to your work routine, such as setting boundaries, delegating tasks, or prioritizing self-care.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"tips-for-managing-burnout-in-remote-programming-jobs\">Tips for Managing Burnout in Remote Programming Jobs\u003C/h3>\n\u003Cp>Remote programming jobs present unique challenges, but with the right approach, you can effectively manage burnout:\u003C/p>\n\u003Ch4 id=\"1-create-a-structured-routine\">1. Create a Structured Routine\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Consistent Schedule:\u003C/strong> Maintain a consistent daily schedule, including start and end times, breaks, and meals.\u003C/li>\n\u003Cli>\u003Cstrong>Morning Routine:\u003C/strong> Develop a morning routine to transition smoothly from personal time to work mode.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-leverage-technology\">2. Leverage Technology\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Productivity Tools:\u003C/strong> Use tools like task managers (Trello, Asana), time trackers (Toggl, Clockify), and communication platforms (Slack, Zoom) to stay organized and efficient.\u003C/li>\n\u003Cli>\u003Cstrong>Wellness Apps:\u003C/strong> Explore wellness apps (Headspace, Calm) that offer guided meditations, breathing exercises, and other stress-relief activities.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-foster-a-positive-work-environment\">3. Foster a Positive Work Environment\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Virtual Social Events:\u003C/strong> Participate in virtual social events and team-building activities to foster connections with colleagues.\u003C/li>\n\u003Cli>\u003Cstrong>Positive Work Culture:\u003C/strong> Encourage a positive work culture by recognizing achievements, offering support, and promoting open communication.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"4-enhance-work-life-balance\">4. Enhance Work-Life Balance\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Flexibility:\u003C/strong> Take advantage of the flexibility remote work offers by scheduling work around your most productive times.\u003C/li>\n\u003Cli>\u003Cstrong>Personal Time:\u003C/strong> Schedule personal activities and hobbies to ensure you have time to relax and recharge outside of work.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"5-seek-professional-development\">5. Seek Professional Development\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Skill Improvement:\u003C/strong> Engage in continuous learning through online courses (Coursera, Udemy) to stay motivated and enhance your skills.\u003C/li>\n\u003Cli>\u003Cstrong>Career Growth:\u003C/strong> Set professional development goals and work towards achieving them, which can provide a sense of accomplishment and purpose.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"summary\">Summary\u003C/h3>\n\u003Cp>Burnout is a serious issue that can affect anyone, especially in the demanding field of software development and remote work environments. By recognizing the signs of burnout, implementing preventive measures, and calmly addressing it when it occurs, you can maintain your well-being and productivity. Remember, taking care of yourself is not just beneficial for you but also essential for your overall effectiveness and success in the workplace.\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Sources:\u003C/em>\u003C/p>\n\u003Col>\n\u003Cli>\u003Ca href=\"https://www.mayoclinic.org/healthy-lifestyle/adult-health/in-depth/burnout/art-20046642\">Mayo Clinic: Job Burnout: How to Spot It and Take Action\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.who.int/news/item/28-05-2019-burn-out-an-occupational-phenomenon-international-classification-of-diseases\">World Health Organization: Burn-out an “Occupational Phenomenon”: International Classification of Diseases\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://hbr.org/2020/04/how-to-avoid-wfh-burnout\">Harvard Business Review: How to Avoid Burnout in a Remote Work Environment\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://hbr.org/2019/07/6-causes-of-burnout-and-how-to-avoid-them\">6 Causes of burnout and how to avoid them\u003C/a>\u003C/li>\n\u003C/ol>\n\u003Cp>These sources provide comprehensive information about burnout, its prevention, and management strategies, particularly in the context of remote work for programmers.\u003C/p>",{"headings":142,"localImagePaths":197,"remoteImagePaths":198,"frontmatter":199,"imagePaths":202},[143,146,149,152,155,158,161,164,167,170,173,176,179,182,185,188,191,194],{"depth":82,"slug":144,"text":145},"understanding-and-preventing-burnout-strategies-for-managing-stress-in-remote-work-for-programmers","Understanding and Preventing Burnout: Strategies for Managing Stress in Remote Work for Programmers",{"depth":82,"slug":147,"text":148},"recognizing-burnout","Recognizing Burnout",{"depth":82,"slug":150,"text":151},"preventing-burnout","Preventing Burnout",{"depth":88,"slug":153,"text":154},"1-establish-clear-boundaries","1. Establish Clear Boundaries",{"depth":88,"slug":156,"text":157},"2-prioritize-self-care","2. Prioritize Self-Care",{"depth":88,"slug":159,"text":160},"3-manage-workload","3. Manage Workload",{"depth":88,"slug":162,"text":163},"4-stay-connected","4. Stay Connected",{"depth":82,"slug":165,"text":166},"handling-burnout-calmly","Handling Burnout Calmly",{"depth":88,"slug":168,"text":169},"1-acknowledge-your-feelings","1. Acknowledge Your Feelings",{"depth":88,"slug":171,"text":172},"2-take-a-step-back","2. Take a Step Back",{"depth":88,"slug":174,"text":175},"3-develop-a-recovery-plan","3. Develop a Recovery Plan",{"depth":82,"slug":177,"text":178},"tips-for-managing-burnout-in-remote-programming-jobs","Tips for Managing Burnout in Remote Programming Jobs",{"depth":88,"slug":180,"text":181},"1-create-a-structured-routine","1. Create a Structured Routine",{"depth":88,"slug":183,"text":184},"2-leverage-technology","2. Leverage Technology",{"depth":88,"slug":186,"text":187},"3-foster-a-positive-work-environment","3. Foster a Positive Work Environment",{"depth":88,"slug":189,"text":190},"4-enhance-work-life-balance","4. Enhance Work-Life Balance",{"depth":88,"slug":192,"text":193},"5-seek-professional-development","5. Seek Professional Development",{"depth":82,"slug":195,"text":196},"summary","Summary",[],[],{"title":129,"publishDate":200,"img":134,"img_alt":135,"description":130,"tags":201},["Date","2024-10-13T00:00:00.000Z"],[71,133,70],[],"en/How-to-avoid-burnout.md","en/native-app-development-vs-hybrid-app-development",{"id":204,"data":206,"body":216,"filePath":217,"digest":218,"rendered":219,"legacyId":239},{"title":207,"description":208,"publishDate":209,"tags":210,"img":215,"img_alt":207},"Native App Development vs. Hybrid App Development","The debate between native app development and hybrid app development has been ongoing for years, and both options have their own advantages and disadvantages. To better understand which option is most suitable for your project, let's delve deeper into each and provide practical examples to illustrate their differences.\n",["Date","2024-02-26T00:00:00.000Z"],[19,211,212,213,214],"Hybrid apps","Native apps","performance","Practical","https://cdn.pixabay.com/photo/2023/01/24/10/30/gearstick-7740670_1280.jpg","### Native App Development vs. Hybrid App Development: A Detailed Analysis\n\nThe debate between native app development and hybrid app development has been ongoing for years, and both options have their own advantages and disadvantages. To better understand which option is most suitable for your project, let's delve deeper into each and provide practical examples to illustrate their differences.\n\n#### Native Apps: Power and Performance\n\nNative apps are built using the programming language and native tools provided by the target platform's operating system. For example, to develop a native app for iOS, Swift or Objective-C is used, while for Android, Java or Kotlin is utilized. Some key advantages include:\n\n**Superior Performance**: Due to their optimization for the specific platform, native apps often offer faster performance and better responsiveness. For example, Instagram is known for its smooth navigation and content loading, thanks to its native development.\n\n**Full Access to Device Features**: Developers have full access to all device features, allowing them to make the most of the camera, GPS, sensors, and other capabilities. An example is the fitness app Strava, which uses GPS and motion sensor to accurately track and record sports activities.\n\n#### Hybrid Apps: Versatility and Efficiency\n\nHybrid apps are built using web technologies such as HTML, CSS, and JavaScript, and then wrapped in a native container that enables them to run on multiple platforms. Popular examples of frameworks for hybrid app development include Ionic, React Native, and Flutter. Some key advantages are:\n\n**Rapid Development**: With hybrid apps, developers can write code once and run it on multiple platforms, significantly reducing development time and costs. For example, the news app BuzzFeed uses React Native to maintain a single codebase for both iOS and Android.\n\n**Ease of Maintenance**: With a single codebase, updates and maintenance become simpler and quicker to implement. An example is the e-commerce app Airbnb, which uses React Native to maintain a consistent user experience across all platforms with a smaller development team.\n\n**Practical Example**: To-Do List Application\nTo illustrate the differences between a native app and a hybrid app, let's consider developing a simple to-do list application:\n\n**Native App**: Using native development tools for iOS or Android, we can create an app that fully utilizes device features, such as push notifications for task reminders and integration with the calendar to set deadlines.\n\n**Hybrid App**: Using a framework like Ionic or React Native, we can create an app that works on multiple platforms with a single codebase. Although there may be some limitations in accessing specific device features, such as push notifications, the app can still offer basic to-do list management functionality efficiently.\n\n#### In summary\n\n**Choose Wisely for Your Project:** Ultimately, the choice between a native app and a hybrid app will depend on the specific requirements of your project, including performance, required functionality, and available budget. It's important to carefully evaluate these considerations before making a final decision. Remember that both native and hybrid apps have their place in the world of mobile app development, and the key is to select the option that best fits your project's needs.","src/content/blog/en/Native-app-development-vs-hybrid-app-development.md","0def5273b13a4d91",{"html":220,"metadata":221},"\u003Ch3 id=\"native-app-development-vs-hybrid-app-development-a-detailed-analysis\">Native App Development vs. Hybrid App Development: A Detailed Analysis\u003C/h3>\n\u003Cp>The debate between native app development and hybrid app development has been ongoing for years, and both options have their own advantages and disadvantages. To better understand which option is most suitable for your project, let’s delve deeper into each and provide practical examples to illustrate their differences.\u003C/p>\n\u003Ch4 id=\"native-apps-power-and-performance\">Native Apps: Power and Performance\u003C/h4>\n\u003Cp>Native apps are built using the programming language and native tools provided by the target platform’s operating system. For example, to develop a native app for iOS, Swift or Objective-C is used, while for Android, Java or Kotlin is utilized. Some key advantages include:\u003C/p>\n\u003Cp>\u003Cstrong>Superior Performance\u003C/strong>: Due to their optimization for the specific platform, native apps often offer faster performance and better responsiveness. For example, Instagram is known for its smooth navigation and content loading, thanks to its native development.\u003C/p>\n\u003Cp>\u003Cstrong>Full Access to Device Features\u003C/strong>: Developers have full access to all device features, allowing them to make the most of the camera, GPS, sensors, and other capabilities. An example is the fitness app Strava, which uses GPS and motion sensor to accurately track and record sports activities.\u003C/p>\n\u003Ch4 id=\"hybrid-apps-versatility-and-efficiency\">Hybrid Apps: Versatility and Efficiency\u003C/h4>\n\u003Cp>Hybrid apps are built using web technologies such as HTML, CSS, and JavaScript, and then wrapped in a native container that enables them to run on multiple platforms. Popular examples of frameworks for hybrid app development include Ionic, React Native, and Flutter. Some key advantages are:\u003C/p>\n\u003Cp>\u003Cstrong>Rapid Development\u003C/strong>: With hybrid apps, developers can write code once and run it on multiple platforms, significantly reducing development time and costs. For example, the news app BuzzFeed uses React Native to maintain a single codebase for both iOS and Android.\u003C/p>\n\u003Cp>\u003Cstrong>Ease of Maintenance\u003C/strong>: With a single codebase, updates and maintenance become simpler and quicker to implement. An example is the e-commerce app Airbnb, which uses React Native to maintain a consistent user experience across all platforms with a smaller development team.\u003C/p>\n\u003Cp>\u003Cstrong>Practical Example\u003C/strong>: To-Do List Application\nTo illustrate the differences between a native app and a hybrid app, let’s consider developing a simple to-do list application:\u003C/p>\n\u003Cp>\u003Cstrong>Native App\u003C/strong>: Using native development tools for iOS or Android, we can create an app that fully utilizes device features, such as push notifications for task reminders and integration with the calendar to set deadlines.\u003C/p>\n\u003Cp>\u003Cstrong>Hybrid App\u003C/strong>: Using a framework like Ionic or React Native, we can create an app that works on multiple platforms with a single codebase. Although there may be some limitations in accessing specific device features, such as push notifications, the app can still offer basic to-do list management functionality efficiently.\u003C/p>\n\u003Ch4 id=\"in-summary\">In summary\u003C/h4>\n\u003Cp>\u003Cstrong>Choose Wisely for Your Project:\u003C/strong> Ultimately, the choice between a native app and a hybrid app will depend on the specific requirements of your project, including performance, required functionality, and available budget. It’s important to carefully evaluate these considerations before making a final decision. Remember that both native and hybrid apps have their place in the world of mobile app development, and the key is to select the option that best fits your project’s needs.\u003C/p>",{"headings":222,"localImagePaths":233,"remoteImagePaths":234,"frontmatter":235,"imagePaths":238},[223,226,229,232],{"depth":82,"slug":224,"text":225},"native-app-development-vs-hybrid-app-development-a-detailed-analysis","Native App Development vs. Hybrid App Development: A Detailed Analysis",{"depth":88,"slug":227,"text":228},"native-apps-power-and-performance","Native Apps: Power and Performance",{"depth":88,"slug":230,"text":231},"hybrid-apps-versatility-and-efficiency","Hybrid Apps: Versatility and Efficiency",{"depth":88,"slug":49,"text":50},[],[],{"title":207,"publishDate":236,"img":215,"img_alt":207,"description":208,"tags":237},["Date","2024-02-26T00:00:00.000Z"],[19,211,212,213,214],[],"en/Native-app-development-vs-hybrid-app-development.md","en/optimizing-web-application-performance",{"id":240,"data":242,"body":250,"filePath":251,"digest":252,"rendered":253,"legacyId":278},{"title":243,"description":244,"publishDate":245,"tags":246,"img":248,"img_alt":249},"Optimizing Web Application Performance with WebAssembly in TypeScript","In the fast-paced world of web development, speed and efficiency are paramount. In this article, we will explore how to use WebAssembly in conjunction with TypeScript to significantly enhance the performance of our web applications.\n",["Date","2024-01-09T00:00:00.000Z"],[18,22,247],"Web Assembly","https://cdn.pixabay.com/photo/2017/08/25/19/11/tuning-world-2681096_1280.jpg","Optimizing Web Application Performance with WebAssembly in TypeScript by sergio campbell dev","##### Introduction to WebAssembly and TypeScript\n\n[WebAssembly](https://webassembly.org/), or simply wasm, is a standard that enables the efficient execution of low-level code in web browsers. Combining it with TypeScript provides the advantages of a strongly-typed language, making code development and maintenance more straightforward.\n\n\u003Ccode class=\"code\">\n// Example TypeScript code compiled to WebAssembly\nfunction add(a: number, b: number): number {\n    return a + b;\n}\n\u003C/code>\n\n##### Integrating WebAssembly into TypeScript Projects\n\nWe will learn how to seamlessly integrate WebAssembly modules into TypeScript projects. We'll use tools such as `wasm-pack` to package and export our wasm functions.\n\n\u003Ccode class=\"code\">\n// Installing wasm-pack\nnpm install -g wasm-pack\n// Packaging the WebAssembly project\nwasm-pack build --target web\n\u003C/code>\n\n##### Enhancing Performance with Intensive Operations\n\nWe'll explore use cases where WebAssembly excels, particularly in intensive mathematical operations or complex algorithms. We'll compare performance with pure JavaScript implementations to highlight the improvements.\n\n\u003Ccode class=\"code\">\n// Example of intensive mathematical operation in TypeScript\nfunction fibonacci(n: number): number {\n    if (n \u003C= 1) return n;\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\u003C/code>\n\n##### Practical Use Cases in Real-world Web Applications\n\nWe'll examine concrete examples of applying WebAssembly in real-world projects. From efficient image manipulation to real-time algorithm acceleration, we'll discover the positive impact in various contexts.\n\n\u003Ccode class=\"code\">\n// Using WebAssembly for image processing\nconst processedImage = wasmModule.processImage(image);\n\u003C/code>\n\n##### Security Considerations and Best Practices\n\nWe can't overlook the importance of security when incorporating WebAssembly into our applications. We'll discuss best practices to ensure a secure environment and avoid potential vulnerabilities.\n\n\u003Ccode class=\"code\">\n// Avoiding vulnerabilities when loading WebAssembly modules\nconst importObject = { env: { abort: console.error } };\nWebAssembly.instantiateStreaming(fetch('my-module.wasm'), importObject)\n    .then(instance => {\n        // Application logic\n    })\n    .catch(error => console.error(error));\n\u003C/code>","src/content/blog/en/Optimizing-Web-Application-Performance.md","2ce0ec6e812bb1f4",{"html":254,"metadata":255},"\u003Ch5 id=\"introduction-to-webassembly-and-typescript\">Introduction to WebAssembly and TypeScript\u003C/h5>\n\u003Cp>\u003Ca href=\"https://webassembly.org/\">WebAssembly\u003C/a>, or simply wasm, is a standard that enables the efficient execution of low-level code in web browsers. Combining it with TypeScript provides the advantages of a strongly-typed language, making code development and maintenance more straightforward.\u003C/p>\n\u003Ccode class=\"code\">\n// Example TypeScript code compiled to WebAssembly\nfunction add(a: number, b: number): number {\n    return a + b;\n}\n\u003C/code>\n\u003Ch5 id=\"integrating-webassembly-into-typescript-projects\">Integrating WebAssembly into TypeScript Projects\u003C/h5>\n\u003Cp>We will learn how to seamlessly integrate WebAssembly modules into TypeScript projects. We’ll use tools such as \u003Ccode>wasm-pack\u003C/code> to package and export our wasm functions.\u003C/p>\n\u003Ccode class=\"code\">\n// Installing wasm-pack\nnpm install -g wasm-pack\n// Packaging the WebAssembly project\nwasm-pack build --target web\n\u003C/code>\n\u003Ch5 id=\"enhancing-performance-with-intensive-operations\">Enhancing Performance with Intensive Operations\u003C/h5>\n\u003Cp>We’ll explore use cases where WebAssembly excels, particularly in intensive mathematical operations or complex algorithms. We’ll compare performance with pure JavaScript implementations to highlight the improvements.\u003C/p>\n\u003Ccode class=\"code\">\n// Example of intensive mathematical operation in TypeScript\nfunction fibonacci(n: number): number {\n    if (n &#x3C;= 1) return n;\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\u003C/code>\n\u003Ch5 id=\"practical-use-cases-in-real-world-web-applications\">Practical Use Cases in Real-world Web Applications\u003C/h5>\n\u003Cp>We’ll examine concrete examples of applying WebAssembly in real-world projects. From efficient image manipulation to real-time algorithm acceleration, we’ll discover the positive impact in various contexts.\u003C/p>\n\u003Ccode class=\"code\">\n// Using WebAssembly for image processing\nconst processedImage = wasmModule.processImage(image);\n\u003C/code>\n\u003Ch5 id=\"security-considerations-and-best-practices\">Security Considerations and Best Practices\u003C/h5>\n\u003Cp>We can’t overlook the importance of security when incorporating WebAssembly into our applications. We’ll discuss best practices to ensure a secure environment and avoid potential vulnerabilities.\u003C/p>\n\u003Ccode class=\"code\">\n// Avoiding vulnerabilities when loading WebAssembly modules\nconst importObject = { env: { abort: console.error } };\nWebAssembly.instantiateStreaming(fetch('my-module.wasm'), importObject)\n    .then(instance => {\n        // Application logic\n    })\n    .catch(error => console.error(error));\n\u003C/code>",{"headings":256,"localImagePaths":272,"remoteImagePaths":273,"frontmatter":274,"imagePaths":277},[257,260,263,266,269],{"depth":33,"slug":258,"text":259},"introduction-to-webassembly-and-typescript","Introduction to WebAssembly and TypeScript",{"depth":33,"slug":261,"text":262},"integrating-webassembly-into-typescript-projects","Integrating WebAssembly into TypeScript Projects",{"depth":33,"slug":264,"text":265},"enhancing-performance-with-intensive-operations","Enhancing Performance with Intensive Operations",{"depth":33,"slug":267,"text":268},"practical-use-cases-in-real-world-web-applications","Practical Use Cases in Real-world Web Applications",{"depth":33,"slug":270,"text":271},"security-considerations-and-best-practices","Security Considerations and Best Practices",[],[],{"title":243,"publishDate":275,"img":248,"img_alt":249,"description":244,"tags":276},["Date","2024-01-09T00:00:00.000Z"],[18,22,247],[],"en/Optimizing-Web-Application-Performance.md","en/tolerance-and-programmer-ego",{"id":279,"data":281,"body":287,"filePath":288,"digest":289,"rendered":290,"legacyId":325},{"title":282,"description":283,"publishDate":284,"tags":285,"img":286,"img_alt":249},"Tolerance in the Workplace and the Programmer's Ego","In the fast-paced world of software development, collaboration and effective teamwork are essential for success.\n",["Date","2024-07-04T00:00:00.000Z"],[71,133,70],"https://cdn.pixabay.com/photo/2020/04/16/09/30/shield-5049877_1280.jpg","### Tolerance in the Workplace and the Programmer's Ego\n\n---\n\nIn the fast-paced world of software development, collaboration and effective teamwork are essential for success. However, two significant factors that can impact a team's dynamic are tolerance in the workplace and the programmer's ego. In this article, we will explore these aspects and provide strategies to foster a more harmonious and productive work environment.\n\n### Understanding Tolerance in the Workplace\n\nTolerance in the workplace refers to the acceptance and appreciation of the diverse backgrounds, opinions, and working styles of team members. It involves creating an inclusive environment where everyone feels valued and respected.\n\n#### Why Tolerance Matters\n\n- **Enhances Collaboration:** Tolerant teams are more likely to collaborate effectively, leveraging the strengths of each member.\n- **Promotes Innovation:** Diverse perspectives can lead to more innovative solutions to problems.\n- **Improves Job Satisfaction:** When employees feel respected and valued, their overall job satisfaction and morale improve.\n\n##### Strategies to Promote Tolerance\n\n1. **Encourage Open Communication:**\n   - Foster an environment where team members feel comfortable sharing their ideas and opinions.\n   - Use regular meetings and feedback sessions to discuss any issues and celebrate successes.\n\n2. **Provide Diversity Training:**\n   - Offer training sessions that educate employees about the importance of diversity and inclusion.\n   - Include topics such as cultural awareness and unconscious bias.\n\n3. **Lead by Example:**\n   - Managers and team leaders should model tolerant behavior, showing respect and understanding in all interactions.\n   - Address any instances of intolerance promptly and effectively.\n\n### The Programmer's Ego: A Double-Edged Sword\n\nThe programmer's ego can be a double-edged sword in the workplace. On one hand, confidence in one's abilities can drive innovation and problem-solving. On the other hand, an inflated ego can lead to conflicts and a toxic work environment.\n\n##### The Positive Side of Ego\n\n- **Confidence and Initiative:** A healthy level of confidence can motivate programmers to tackle challenging tasks and propose new ideas.\n- **Leadership:** Confident programmers are often willing to take on leadership roles and mentor junior developers.\n\n##### The Negative Side of Ego\n\n- **Resistance to Feedback:** Programmers with inflated egos may resist constructive criticism, hindering their professional growth.\n- **Team Conflicts:** An overly dominant ego can create tension and conflicts within the team, affecting overall productivity.\n\n#### Strategies to Manage Ego\n\n1. **Foster a Growth Mindset:**\n   - Encourage programmers to view feedback as an opportunity for growth rather than a personal attack.\n   - Promote continuous learning and improvement.\n\n2. **Promote Humility:**\n   - Highlight the importance of humility and the value of collaboration.\n   - Share stories and examples of successful teams that work well together.\n\n3. **Set Clear Expectations:**\n   - Define clear roles and responsibilities within the team to minimize conflicts.\n   - Establish a culture of mutual respect and recognition of each team member's contributions.\n\n##### In summary\n\nTolerance and managing the programmer's ego are crucial for creating a positive and productive work environment. By fostering an inclusive culture and encouraging a healthy balance of confidence and humility, teams can collaborate more effectively and achieve greater success.\n\nRemember, the strength of a development team lies not just in the technical skills of its members but in their ability to work together harmoniously and respect each other's contributions.\n\n---\n\n*Sources:*\n\n1. [The Importance of Tolerance in the Workplace](https://www.theeap.com/wp-content/uploads/2016/02/TotalCare-EAP-March-Employee-Newsletter.pdf)\n2. [The Role of Ego in Software Development](https://medium.com/@mkoutroumpas/about-a-programmers-ego-97e5cd64988d)\n3. [Building a Positive Team Environment](https://www.mindtools.com/pages/article/building-positive-team.htm)","src/content/blog/en/Tolerance-and-programmer-ego.md","11aa8944241b17db",{"html":291,"metadata":292},"\u003Ch3 id=\"tolerance-in-the-workplace-and-the-programmers-ego\">Tolerance in the Workplace and the Programmer’s Ego\u003C/h3>\n\u003Chr>\n\u003Cp>In the fast-paced world of software development, collaboration and effective teamwork are essential for success. However, two significant factors that can impact a team’s dynamic are tolerance in the workplace and the programmer’s ego. In this article, we will explore these aspects and provide strategies to foster a more harmonious and productive work environment.\u003C/p>\n\u003Ch3 id=\"understanding-tolerance-in-the-workplace\">Understanding Tolerance in the Workplace\u003C/h3>\n\u003Cp>Tolerance in the workplace refers to the acceptance and appreciation of the diverse backgrounds, opinions, and working styles of team members. It involves creating an inclusive environment where everyone feels valued and respected.\u003C/p>\n\u003Ch4 id=\"why-tolerance-matters\">Why Tolerance Matters\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Enhances Collaboration:\u003C/strong> Tolerant teams are more likely to collaborate effectively, leveraging the strengths of each member.\u003C/li>\n\u003Cli>\u003Cstrong>Promotes Innovation:\u003C/strong> Diverse perspectives can lead to more innovative solutions to problems.\u003C/li>\n\u003Cli>\u003Cstrong>Improves Job Satisfaction:\u003C/strong> When employees feel respected and valued, their overall job satisfaction and morale improve.\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"strategies-to-promote-tolerance\">Strategies to Promote Tolerance\u003C/h5>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Encourage Open Communication:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Foster an environment where team members feel comfortable sharing their ideas and opinions.\u003C/li>\n\u003Cli>Use regular meetings and feedback sessions to discuss any issues and celebrate successes.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Provide Diversity Training:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Offer training sessions that educate employees about the importance of diversity and inclusion.\u003C/li>\n\u003Cli>Include topics such as cultural awareness and unconscious bias.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Lead by Example:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Managers and team leaders should model tolerant behavior, showing respect and understanding in all interactions.\u003C/li>\n\u003Cli>Address any instances of intolerance promptly and effectively.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"the-programmers-ego-a-double-edged-sword\">The Programmer’s Ego: A Double-Edged Sword\u003C/h3>\n\u003Cp>The programmer’s ego can be a double-edged sword in the workplace. On one hand, confidence in one’s abilities can drive innovation and problem-solving. On the other hand, an inflated ego can lead to conflicts and a toxic work environment.\u003C/p>\n\u003Ch5 id=\"the-positive-side-of-ego\">The Positive Side of Ego\u003C/h5>\n\u003Cul>\n\u003Cli>\u003Cstrong>Confidence and Initiative:\u003C/strong> A healthy level of confidence can motivate programmers to tackle challenging tasks and propose new ideas.\u003C/li>\n\u003Cli>\u003Cstrong>Leadership:\u003C/strong> Confident programmers are often willing to take on leadership roles and mentor junior developers.\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"the-negative-side-of-ego\">The Negative Side of Ego\u003C/h5>\n\u003Cul>\n\u003Cli>\u003Cstrong>Resistance to Feedback:\u003C/strong> Programmers with inflated egos may resist constructive criticism, hindering their professional growth.\u003C/li>\n\u003Cli>\u003Cstrong>Team Conflicts:\u003C/strong> An overly dominant ego can create tension and conflicts within the team, affecting overall productivity.\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"strategies-to-manage-ego\">Strategies to Manage Ego\u003C/h4>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Foster a Growth Mindset:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Encourage programmers to view feedback as an opportunity for growth rather than a personal attack.\u003C/li>\n\u003Cli>Promote continuous learning and improvement.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Promote Humility:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Highlight the importance of humility and the value of collaboration.\u003C/li>\n\u003Cli>Share stories and examples of successful teams that work well together.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Set Clear Expectations:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Define clear roles and responsibilities within the team to minimize conflicts.\u003C/li>\n\u003Cli>Establish a culture of mutual respect and recognition of each team member’s contributions.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ol>\n\u003Ch5 id=\"in-summary\">In summary\u003C/h5>\n\u003Cp>Tolerance and managing the programmer’s ego are crucial for creating a positive and productive work environment. By fostering an inclusive culture and encouraging a healthy balance of confidence and humility, teams can collaborate more effectively and achieve greater success.\u003C/p>\n\u003Cp>Remember, the strength of a development team lies not just in the technical skills of its members but in their ability to work together harmoniously and respect each other’s contributions.\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Sources:\u003C/em>\u003C/p>\n\u003Col>\n\u003Cli>\u003Ca href=\"https://www.theeap.com/wp-content/uploads/2016/02/TotalCare-EAP-March-Employee-Newsletter.pdf\">The Importance of Tolerance in the Workplace\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://medium.com/@mkoutroumpas/about-a-programmers-ego-97e5cd64988d\">The Role of Ego in Software Development\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.mindtools.com/pages/article/building-positive-team.htm\">Building a Positive Team Environment\u003C/a>\u003C/li>\n\u003C/ol>",{"headings":293,"localImagePaths":319,"remoteImagePaths":320,"frontmatter":321,"imagePaths":324},[294,297,300,303,306,309,312,315,318],{"depth":82,"slug":295,"text":296},"tolerance-in-the-workplace-and-the-programmers-ego","Tolerance in the Workplace and the Programmer’s Ego",{"depth":82,"slug":298,"text":299},"understanding-tolerance-in-the-workplace","Understanding Tolerance in the Workplace",{"depth":88,"slug":301,"text":302},"why-tolerance-matters","Why Tolerance Matters",{"depth":33,"slug":304,"text":305},"strategies-to-promote-tolerance","Strategies to Promote Tolerance",{"depth":82,"slug":307,"text":308},"the-programmers-ego-a-double-edged-sword","The Programmer’s Ego: A Double-Edged Sword",{"depth":33,"slug":310,"text":311},"the-positive-side-of-ego","The Positive Side of Ego",{"depth":33,"slug":313,"text":314},"the-negative-side-of-ego","The Negative Side of Ego",{"depth":88,"slug":316,"text":317},"strategies-to-manage-ego","Strategies to Manage Ego",{"depth":33,"slug":49,"text":50},[],[],{"title":282,"publishDate":322,"img":286,"img_alt":249,"description":283,"tags":323},["Date","2024-07-04T00:00:00.000Z"],[71,133,70],[],"en/Tolerance-and-programmer-ego.md","en/internationalization-next",{"id":326,"data":328,"body":338,"filePath":339,"digest":340,"rendered":341,"legacyId":387},{"title":329,"description":330,"publishDate":331,"tags":332,"img":336,"img_alt":337},"Internationalization i18n in Nextjs project","Internationalization, also known as i18n (short for \"internationalization\"), is a crucial aspect to reach global audiences in web application development. In this article, we will guide you through the process of integrating internationalization into your Next.js project using the next-intl library.\n",["Date","2024-02-11T00:00:00.000Z"],[19,333,334,335],"i18n","Nextjs","next-intl","https://cdn.pixabay.com/photo/2018/07/08/08/45/abc-3523453_1280.jpg","Internationalization i18n in Nextjs project by sergio campbell dev","##### Integrating Internationalization (i18n) into your Next.js Project with next-intl\n\nInternationalization, also known as i18n (short for \"internationalization\"), is a crucial aspect to reach global audiences in web application development. In this article, we will guide you through the process of integrating internationalization into your Next.js project using the `next-intl` library.\n\n##### What is next-intl?\n\n`next-intl` is a library that facilitates internationalization in Next.js projects. It allows for content translation and management of date, time, and number formats in different languages in a simple and efficient manner.\n\n##### Steps to Integrate next-intl into your Next.js Project\n\n##### 1. Installing Dependencies\n\nTo get started, install the necessary dependencies by running the following command in your terminal:\n\n```bash\nnpm install next-intl`\n```\n\n and create the following file structure:\n\n```bash\n├── messages (1)\n│   ├── en.json\n│   └── ...\n├── next.config.mjs (2)\n└── src\n    ├── i18n.ts (3)\n    ├── middleware.ts (4)\n    └── app\n        └── [locale]\n            ├── layout.tsx (5)\n            └── page.tsx (6)\n```\n\n##### 2. Configuring next-intl\n\nIn your `next.config.js` file, add the following configuration to enable support for `next-intl`:\n\n```js\nconst { withIntl } = require('next-intl');\nmodule.exports = withIntl();\n```\n\n##### 3. Creating Translation Files\n\nCreate translation files for each language you wish to support in your application. For example, you can have files like `en.json` for English and `es.json` for Spanish, located in a directory such as `public/locales`.\n\nExample:\n\n```js\n{\n  \"Index\": {\n    \"title\": \"Hello world!\"\n  }\n}\n```\n\n##### 4. Setting up next.config.mjs\n\nNow, set up the plugin which creates an alias to provide your i18n configuration (specified in the next step) to Server Components.\n\nIf you're using ECMAScript modules for your Next.js config, you can use the plugin as follows:\n\n\u003Ccode class=\"code\">\n/** @type {import('next').NextConfig} */\nimport createNextIntlPlugin from 'next-intl/plugin';\nconst withNextIntl = createNextIntlPlugin();\nconst nextConfig = {};\nexport default withNextIntl(nextConfig);\n\u003C/code>\n\nIf you're using CommonJS for your Next.js config, you can use the plugin as follows:\n\n\u003Ccode class=\"code\">\nconst createNextIntlPlugin = require('next-intl/plugin');\nconst withNextIntl = createNextIntlPlugin();\n/** @type {import('next').NextConfig} */\nconst nextConfig = {};\nmodule.exports = withNextIntl(nextConfig);\n\u003C/code>\n\n##### 5. Configure i18n.js\n\nnext-intl creates a configuration once per request. Here you can provide messages and other options depending on the locale of the user.\n\n\u003Ccode class=\"code\">\n// src/i18n.ts\nimport {notFound} from 'next/navigation';\nimport {getRequestConfig} from 'next-intl/server';\n// Can be imported from a shared config\nconst locales = ['en', 'es'];\nexport default getRequestConfig(async ({locale}) => {\n  // Validate that the incoming `locale` parameter is valid\n  if (!locales.includes(locale as any)) notFound();\n  return {\n    messages: (await import(`../messages/${locale}.json`)).default\n  };\n});\n\u003C/code>\n\n**🚨 Can I move this file somewhere else?**\n\nThis file is supported out-of-the-box both in the src folder as well as in the project root with the extensions .ts, .tsx, .js and .jsx.\n\nIf you prefer to move this file somewhere else, you can provide an optional path to the plugin:\n\n```js\nconst withNextIntl = createNextIntlPlugin(\n  // Specify a custom path here\n  './somewhere/else/i18n.ts'\n);\n```\n\n##### 6. Configure middleware.ts\n\nThe middleware matches a locale for the request and handles redirects and rewrites accordingly.\n\n```js\n//src/middleware.ts\nimport createMiddleware \nfrom 'next-intl/middleware';\nexport default createMiddleware({\n// A list of all locales that are supported\n  locales: ['en', 'es'],\n\n// Used when no locale matches\n  defaultLocale: 'en'\n});\nexport const config = {\n// Match only internationalized pathnames\n  matcher: ['/', '/(es|en)/:path*']\n};\n```\n\n##### 7. Setting up app/[locale]/layout.tsx\n\nThe `locale` that was matched by the middleware is available via the `locale` param and can be used to configure the document language.\n\n```js\n//app/[locale]/layout.tsx\nexport default function LocaleLayout({\n  children,\n  params: {locale}\n}: {\n  children: React.ReactNode;\n  params: {locale: string};\n}) {\n  return (\n    \u003Chtml lang={locale}>\n      \u003Cbody>{children}\u003C/body>\n    \u003C/html>\n  );\n}\n```\n\n##### Using Translations\n\nUse translations in your page components or anywhere else!\n\n```js\n//app/[locale]/page.tsx\nimport {useTranslations} from 'next-intl';\nexport default function Index() {\n  const t = useTranslations('Index');\n  return \u003C h1 >{t('title')}\u003C/ h1 >;\n}\n```\n\n##### Start Internationalizing your Next.js Application Today\n\nWith these simple steps, you can easily add internationalization support to your Next.js project using `next-intl`. Now, your application will be ready to reach a global audience and provide a localized and personalized experience.\nDon't wait any longer and start internationalizing your application today!\n\n**Remember to follow the documentation for more details**\n\n---\n\n*Sources:*\n\n1. GitHub - Next.js: \u003Chttps://github.com/vercel/next.js>\n2. GitHub - next-intl: \u003Chttps://github.com/amannn/next-intl>","src/content/blog/en/Internationalization-next.md","e1ac64e32a9def34",{"html":342,"metadata":343},"\u003Ch5 id=\"integrating-internationalization-i18n-into-your-nextjs-project-with-next-intl\">Integrating Internationalization (i18n) into your Next.js Project with next-intl\u003C/h5>\n\u003Cp>Internationalization, also known as i18n (short for “internationalization”), is a crucial aspect to reach global audiences in web application development. In this article, we will guide you through the process of integrating internationalization into your Next.js project using the \u003Ccode>next-intl\u003C/code> library.\u003C/p>\n\u003Ch5 id=\"what-is-next-intl\">What is next-intl?\u003C/h5>\n\u003Cp>\u003Ccode>next-intl\u003C/code> is a library that facilitates internationalization in Next.js projects. It allows for content translation and management of date, time, and number formats in different languages in a simple and efficient manner.\u003C/p>\n\u003Ch5 id=\"steps-to-integrate-next-intl-into-your-nextjs-project\">Steps to Integrate next-intl into your Next.js Project\u003C/h5>\n\u003Ch5 id=\"1-installing-dependencies\">1. Installing Dependencies\u003C/h5>\n\u003Cp>To get started, install the necessary dependencies by running the following command in your terminal:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> install\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> next-intl`\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>and create the following file structure:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">├──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> messages\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (1)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">│\u003C/span>\u003Cspan style=\"color:#9ECBFF\">   ├──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> en.json\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">│\u003C/span>\u003Cspan style=\"color:#9ECBFF\">   └──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">├──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> next.config.mjs\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">└──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> src\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    ├──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> i18n.ts\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (3)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    ├──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> middleware.ts\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (4)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">    └──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> app\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        └──\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [locale]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            ├──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> layout.tsx\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (5)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">            └──\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> page.tsx\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (6)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"2-configuring-next-intl\">2. Configuring next-intl\u003C/h5>\n\u003Cp>In your \u003Ccode>next.config.js\u003C/code> file, add the following configuration to enable support for \u003Ccode>next-intl\u003C/code>:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">withIntl\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> require\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'next-intl'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">module\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#79B8FF\">exports\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> withIntl\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"3-creating-translation-files\">3. Creating Translation Files\u003C/h5>\n\u003Cp>Create translation files for each language you wish to support in your application. For example, you can have files like \u003Ccode>en.json\u003C/code> for English and \u003Ccode>es.json\u003C/code> for Spanish, located in a directory such as \u003Ccode>public/locales\u003C/code>.\u003C/p>\n\u003Cp>Example:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  \"Index\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">    \"title\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Hello world!\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"4-setting-up-nextconfigmjs\">4. Setting up next.config.mjs\u003C/h5>\n\u003Cp>Now, set up the plugin which creates an alias to provide your i18n configuration (specified in the next step) to Server Components.\u003C/p>\n\u003Cp>If you’re using ECMAScript modules for your Next.js config, you can use the plugin as follows:\u003C/p>\n\u003Ccode class=\"code\">\n/** @type {import('next').NextConfig} */\nimport createNextIntlPlugin from 'next-intl/plugin';\nconst withNextIntl = createNextIntlPlugin();\nconst nextConfig = {};\nexport default withNextIntl(nextConfig);\n\u003C/code>\n\u003Cp>If you’re using CommonJS for your Next.js config, you can use the plugin as follows:\u003C/p>\n\u003Ccode class=\"code\">\nconst createNextIntlPlugin = require('next-intl/plugin');\nconst withNextIntl = createNextIntlPlugin();\n/** @type {import('next').NextConfig} */\nconst nextConfig = {};\nmodule.exports = withNextIntl(nextConfig);\n\u003C/code>\n\u003Ch5 id=\"5-configure-i18njs\">5. Configure i18n.js\u003C/h5>\n\u003Cp>next-intl creates a configuration once per request. Here you can provide messages and other options depending on the locale of the user.\u003C/p>\n\u003Ccode class=\"code\">\n// src/i18n.ts\nimport {notFound} from 'next/navigation';\nimport {getRequestConfig} from 'next-intl/server';\n// Can be imported from a shared config\nconst locales = ['en', 'es'];\nexport default getRequestConfig(async ({locale}) => {\n  // Validate that the incoming `locale` parameter is valid\n  if (!locales.includes(locale as any)) notFound();\n  return {\n    messages: (await import(`../messages/${locale}.json`)).default\n  };\n});\n\u003C/code>\n\u003Cp>\u003Cstrong>🚨 Can I move this file somewhere else?\u003C/strong>\u003C/p>\n\u003Cp>This file is supported out-of-the-box both in the src folder as well as in the project root with the extensions .ts, .tsx, .js and .jsx.\u003C/p>\n\u003Cp>If you prefer to move this file somewhere else, you can provide an optional path to the plugin:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> withNextIntl\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> createNextIntlPlugin\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">  // Specify a custom path here\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">  './somewhere/else/i18n.ts'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"6-configure-middlewarets\">6. Configure middleware.ts\u003C/h5>\n\u003Cp>The middleware matches a locale for the request and handles redirects and rewrites accordingly.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">//src/middleware.ts\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> createMiddleware \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'next-intl/middleware'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#B392F0\"> createMiddleware\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// A list of all locales that are supported\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  locales: [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'en'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'es'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">],\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Used when no locale matches\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  defaultLocale: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'en'\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> config\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Match only internationalized pathnames\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  matcher: [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'/(es|en)/:path*'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"7-setting-up-applocalelayouttsx\">7. Setting up app/[locale]/layout.tsx\u003C/h5>\n\u003Cp>The \u003Ccode>locale\u003C/code> that was matched by the middleware is available via the \u003Ccode>locale\u003C/code> param and can be used to configure the document language.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">//app/[locale]/layout.tsx\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#B392F0\"> LocaleLayout\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  children\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  params\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: {\u003C/span>\u003Cspan style=\"color:#FFAB70\">locale\u003C/span>\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  children\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#B392F0\"> React\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">ReactNode\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  params\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003Cspan style=\"color:#FFAB70\">locale\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#B392F0\"> lang\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{locale}>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{children}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"using-translations\">Using Translations\u003C/h5>\n\u003Cp>Use translations in your page components or anywhere else!\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">//app/[locale]/page.tsx\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {useTranslations} \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'next-intl'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#B392F0\"> Index\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> t\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> useTranslations\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'Index'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> &#x3C; \u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> >{\u003C/span>\u003Cspan style=\"color:#B392F0\">t\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'title'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)}&#x3C;/ \u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> >;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch5 id=\"start-internationalizing-your-nextjs-application-today\">Start Internationalizing your Next.js Application Today\u003C/h5>\n\u003Cp>With these simple steps, you can easily add internationalization support to your Next.js project using \u003Ccode>next-intl\u003C/code>. Now, your application will be ready to reach a global audience and provide a localized and personalized experience.\nDon’t wait any longer and start internationalizing your application today!\u003C/p>\n\u003Cp>\u003Cstrong>Remember to follow the documentation for more details\u003C/strong>\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Sources:\u003C/em>\u003C/p>\n\u003Col>\n\u003Cli>GitHub - Next.js: \u003Ca href=\"https://github.com/vercel/next.js\">https://github.com/vercel/next.js\u003C/a>\u003C/li>\n\u003Cli>GitHub - next-intl: \u003Ca href=\"https://github.com/amannn/next-intl\">https://github.com/amannn/next-intl\u003C/a>\u003C/li>\n\u003C/ol>",{"headings":344,"localImagePaths":381,"remoteImagePaths":382,"frontmatter":383,"imagePaths":386},[345,348,351,354,357,360,363,366,369,372,375,378],{"depth":33,"slug":346,"text":347},"integrating-internationalization-i18n-into-your-nextjs-project-with-next-intl","Integrating Internationalization (i18n) into your Next.js Project with next-intl",{"depth":33,"slug":349,"text":350},"what-is-next-intl","What is next-intl?",{"depth":33,"slug":352,"text":353},"steps-to-integrate-next-intl-into-your-nextjs-project","Steps to Integrate next-intl into your Next.js Project",{"depth":33,"slug":355,"text":356},"1-installing-dependencies","1. Installing Dependencies",{"depth":33,"slug":358,"text":359},"2-configuring-next-intl","2. Configuring next-intl",{"depth":33,"slug":361,"text":362},"3-creating-translation-files","3. Creating Translation Files",{"depth":33,"slug":364,"text":365},"4-setting-up-nextconfigmjs","4. Setting up next.config.mjs",{"depth":33,"slug":367,"text":368},"5-configure-i18njs","5. Configure i18n.js",{"depth":33,"slug":370,"text":371},"6-configure-middlewarets","6. Configure middleware.ts",{"depth":33,"slug":373,"text":374},"7-setting-up-applocalelayouttsx","7. Setting up app/[locale]/layout.tsx",{"depth":33,"slug":376,"text":377},"using-translations","Using Translations",{"depth":33,"slug":379,"text":380},"start-internationalizing-your-nextjs-application-today","Start Internationalizing your Next.js Application Today",[],[],{"title":329,"publishDate":384,"img":336,"img_alt":337,"description":330,"tags":385},["Date","2024-02-11T00:00:00.000Z"],[19,333,334,335],[],"en/Internationalization-next.md","en/crp-you-need-to-know",{"id":388,"data":390,"body":400,"filePath":401,"digest":402,"rendered":403,"legacyId":456},{"title":391,"description":392,"publishDate":393,"tags":394,"img":398,"img_alt":399},"CRP (Critical Rendering Path) you need to know","CRP that we usually use and we don´t know we use it 🧐.\n",["Date","2024-12-20T00:00:00.000Z"],[18,19,395,396,397],"HTML","CSS","DOM","https://cdn.pixabay.com/photo/2023/11/29/14/15/forest-8419725_1280.jpg","CRP (Critical Rendering Path) by sergio campbell dev","### Understanding the Critical Rendering Path (CRP) in Web Development\n\n---\n\nThe Critical Rendering Path (CRP) is a key concept in web performance optimization, focusing on how browsers convert HTML, CSS, and JavaScript into pixels on a screen. Understanding the CRP helps developers optimize their websites for faster load times and better user experiences. In this article, we’ll explore the CRP in detail, explain its components, and provide practical tips and resources for optimization.\n\n### What is the Critical Rendering Path?\n\nThe Critical Rendering Path refers to the sequence of steps the browser takes to render a web page. This process involves:\n\n1. **Parsing HTML to create the Document Object Model (DOM).**\n2. **Parsing CSS to create the CSS Object Model (CSSOM).**\n3. **Combining the DOM and CSSOM to create the Render Tree.**\n4. **Calculating the layout of the elements on the page.**\n5. **Painting the pixels to the screen.**\n\n### Steps of the Critical Rendering Path\n\n#### 1. Parsing HTML and Building the DOM\n\nThe browser begins by parsing the HTML document to construct the DOM. The DOM is a tree-like structure that represents the content and structure of the web page.\n\n- **Example:**\n\n  ```html\n  \u003Chtml>\n    \u003Chead>\n      \u003Ctitle>My Page\u003C/title>\n    \u003C/head>\n    \u003Cbody>\n      \u003Ch1>Hello, World!\u003C/h1>\n      \u003Cp>Welcome to my website.\u003C/p>\n    \u003C/body>\n  \u003C/html>\n  ```\n\n- **DOM Tree:**\n\n  ```sheet\n  Document\n  ├── html\n      ├── head\n      │   └── title\n      │       └── My Page\n      └── body\n          ├── h1\n          │   └── Hello, World!\n          └── p\n              └── Welcome to my website.\n  ```\n\n#### 2. Parsing CSS and Building the CSSOM\n\nSimultaneously, the browser parses the CSS files to construct the CSSOM, which represents the styles applied to the DOM elements.\n\n- **Example:**\n\n  ```css\n  body {\n    font-family: Arial, sans-serif;\n  }\n  h1 {\n    color: blue;\n  }\n  ```\n\n- **CSSOM:**\n\n  ```sheet\n  Stylesheet\n  ├── body\n  │   └── font-family: Arial, sans-serif\n  └── h1\n      └── color: blue\n  ```\n\n#### 3. Creating the Render Tree\n\nThe browser combines the DOM and CSSOM to create the Render Tree, which represents the visual elements on the screen.\n\n- **Render Tree:**\n\n  ```sheet\n  RenderRoot\n  ├── RenderBody (font-family: Arial, sans-serif)\n      ├── RenderH1 (color: blue)\n      └── RenderP\n  ```\n\n#### 4. Layout\n\nThe browser calculates the layout of each element in the Render Tree, determining their size and position on the screen.\n\n- **Example:**\n  - The browser determines the position and size of the `\u003Ch1>` and `\u003Cp>` elements based on the applied styles.\n\n#### 5. Painting\n\nFinally, the browser paints the pixels to the screen, rendering the visual representation of the web page.\n\n### Optimizing the Critical Rendering Path\n\nOptimizing the CRP involves minimizing the time it takes for a browser to render the page. Here are some practical tips:\n\n#### 1. Minimize Critical Resources\n\n- **Inline Critical CSS:** Place critical CSS directly in the HTML `\u003Chead>` to reduce render-blocking resources.\n\n  ```html\n  \u003Cstyle>\n    body {\n      font-family: Arial, sans-serif;\n    }\n    h1 {\n      color: blue;\n    }\n  \u003C/style>\n  ```\n\n#### 2. Defer Non-Essential JavaScript\n\n- **Async and Defer Attributes:** Use the `async` and `defer` attributes to load JavaScript files without blocking the rendering.\n\n  ```html\n  \u003Cscript src=\"script.js\" defer>\u003C/script>\n  ```\n\n#### 3. Optimize CSS Delivery\n\n- **Critical CSS:** Extract and inline only the critical CSS needed for above-the-fold content.\n  - Tools like [Critical](https://github.com/addyosmani/critical) can automate this process.\n\n#### 4. Minimize Render-Blocking Resources\n\n- **Load CSS First:** Ensure CSS files are loaded before rendering content. Use the `\u003Clink>` tag with the `rel=\"stylesheet\"` attribute in the `\u003Chead>`.\n\n  ```html\n  \u003Clink rel=\"stylesheet\" href=\"styles.css\">\n  ```\n\n### Tools and Resources for CRP Optimization\n\n- **Lighthouse:** Google’s Lighthouse tool provides performance audits and suggests optimizations, including CRP improvements.\n  - [Google Lighthouse](https://developers.google.com/web/tools/lighthouse)\n\n- **PageSpeed Insights:** Google’s PageSpeed Insights analyzes the content of a web page and generates suggestions to make it faster.\n  - [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/)\n\n- **WebPageTest:** An open-source tool that provides detailed performance analysis, including CRP insights.\n  - [WebPageTest](https://www.webpagetest.org/)\n\n- **Critical:** A Node.js module for extracting and inlining critical-path CSS.\n  - [Critical on GitHub](https://github.com/addyosmani/critical)\n\n### In summary\n\nUnderstanding and optimizing the Critical Rendering Path is essential for enhancing web performance. By focusing on efficient HTML, CSS, and JavaScript delivery, you can ensure faster load times and a better user experience. Utilize the tools and techniques discussed to analyze and optimize your web pages, making them more responsive and user-friendly.\n\n---\n\n*Sources:*\n\n1. [Google Developers: Critical Rendering Path](https://developers.google.com/web/fundamentals/performance/critical-rendering-path/)\n2. [MDN Web Docs: CSS Object Model (CSSOM)](https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model)\n3. [Google Developers: Optimize CSS Delivery](https://developers.google.com/speed/docs/insights/OptimizeCSSDelivery)\n4. [Lighthouse Documentation](https://developers.google.com/web/tools/lighthouse)\n5. [PageSpeed Insights](https://developers.google.com/speed/pagespeed/insights/)\n6. [WebPageTest](https://www.webpagetest.org/)\n7. [Critical GitHub Repository](https://github.com/addyosmani/critical)\n\nThese resources provide in-depth information on CRP and tools for optimizing web performance.\n\n*Together, we build better code!*","src/content/blog/en/CRP-you-need-to-know.md","ce6f12d2060906dc",{"html":404,"metadata":405},"\u003Ch3 id=\"understanding-the-critical-rendering-path-crp-in-web-development\">Understanding the Critical Rendering Path (CRP) in Web Development\u003C/h3>\n\u003Chr>\n\u003Cp>The Critical Rendering Path (CRP) is a key concept in web performance optimization, focusing on how browsers convert HTML, CSS, and JavaScript into pixels on a screen. Understanding the CRP helps developers optimize their websites for faster load times and better user experiences. In this article, we’ll explore the CRP in detail, explain its components, and provide practical tips and resources for optimization.\u003C/p>\n\u003Ch3 id=\"what-is-the-critical-rendering-path\">What is the Critical Rendering Path?\u003C/h3>\n\u003Cp>The Critical Rendering Path refers to the sequence of steps the browser takes to render a web page. This process involves:\u003C/p>\n\u003Col>\n\u003Cli>\u003Cstrong>Parsing HTML to create the Document Object Model (DOM).\u003C/strong>\u003C/li>\n\u003Cli>\u003Cstrong>Parsing CSS to create the CSS Object Model (CSSOM).\u003C/strong>\u003C/li>\n\u003Cli>\u003Cstrong>Combining the DOM and CSSOM to create the Render Tree.\u003C/strong>\u003C/li>\n\u003Cli>\u003Cstrong>Calculating the layout of the elements on the page.\u003C/strong>\u003C/li>\n\u003Cli>\u003Cstrong>Painting the pixels to the screen.\u003C/strong>\u003C/li>\n\u003C/ol>\n\u003Ch3 id=\"steps-of-the-critical-rendering-path\">Steps of the Critical Rendering Path\u003C/h3>\n\u003Ch4 id=\"1-parsing-html-and-building-the-dom\">1. Parsing HTML and Building the DOM\u003C/h4>\n\u003Cp>The browser begins by parsing the HTML document to construct the DOM. The DOM is a tree-like structure that represents the content and structure of the web page.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Example:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">head\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">title\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>My Page&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">title\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">head\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Hello, World!&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Welcome to my website.&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>DOM Tree:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Document\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── html\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    ├── head\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    │   └── title\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    │       └── My Page\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    └── body\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        ├── h1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        │   └── Hello, World!\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        └── p\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>            └── Welcome to my website.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-parsing-css-and-building-the-cssom\">2. Parsing CSS and Building the CSSOM\u003C/h4>\n\u003Cp>Simultaneously, the browser parses the CSS files to construct the CSSOM, which represents the styles applied to the DOM elements.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Example:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  font-family\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">Arial\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">sans-serif\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">  color\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>CSSOM:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Stylesheet\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── body\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   └── font-family: Arial, sans-serif\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>└── h1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    └── color: blue\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-creating-the-render-tree\">3. Creating the Render Tree\u003C/h4>\n\u003Cp>The browser combines the DOM and CSSOM to create the Render Tree, which represents the visual elements on the screen.\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Render Tree:\u003C/strong>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>RenderRoot\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── RenderBody (font-family: Arial, sans-serif)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    ├── RenderH1 (color: blue)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>    └── RenderP\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"4-layout\">4. Layout\u003C/h4>\n\u003Cp>The browser calculates the layout of each element in the Render Tree, determining their size and position on the screen.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Example:\u003C/strong>\n\u003Cul>\n\u003Cli>The browser determines the position and size of the \u003Ccode>&#x3C;h1>\u003C/code> and \u003Ccode>&#x3C;p>\u003C/code> elements based on the applied styles.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"5-painting\">5. Painting\u003C/h4>\n\u003Cp>Finally, the browser paints the pixels to the screen, rendering the visual representation of the web page.\u003C/p>\n\u003Ch3 id=\"optimizing-the-critical-rendering-path\">Optimizing the Critical Rendering Path\u003C/h3>\n\u003Cp>Optimizing the CRP involves minimizing the time it takes for a browser to render the page. Here are some practical tips:\u003C/p>\n\u003Ch4 id=\"1-minimize-critical-resources\">1. Minimize Critical Resources\u003C/h4>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Inline Critical CSS:\u003C/strong> Place critical CSS directly in the HTML \u003Ccode>&#x3C;head>\u003C/code> to reduce render-blocking resources.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">style\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  body\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    font-family\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">Arial\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">sans-serif\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#85E89D\">  h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    color\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#79B8FF\">blue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">style\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"2-defer-non-essential-javascript\">2. Defer Non-Essential JavaScript\u003C/h4>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Async and Defer Attributes:\u003C/strong> Use the \u003Ccode>async\u003C/code> and \u003Ccode>defer\u003C/code> attributes to load JavaScript files without blocking the rendering.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#B392F0\"> src\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"script.js\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> defer\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">script\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"3-optimize-css-delivery\">3. Optimize CSS Delivery\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Critical CSS:\u003C/strong> Extract and inline only the critical CSS needed for above-the-fold content.\n\u003Cul>\n\u003Cli>Tools like \u003Ca href=\"https://github.com/addyosmani/critical\">Critical\u003C/a> can automate this process.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"4-minimize-render-blocking-resources\">4. Minimize Render-Blocking Resources\u003C/h4>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Load CSS First:\u003C/strong> Ensure CSS files are loaded before rendering content. Use the \u003Ccode>&#x3C;link>\u003C/code> tag with the \u003Ccode>rel=\"stylesheet\"\u003C/code> attribute in the \u003Ccode>&#x3C;head>\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">link\u003C/span>\u003Cspan style=\"color:#B392F0\"> rel\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"stylesheet\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"styles.css\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"tools-and-resources-for-crp-optimization\">Tools and Resources for CRP Optimization\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Lighthouse:\u003C/strong> Google’s Lighthouse tool provides performance audits and suggests optimizations, including CRP improvements.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://developers.google.com/web/tools/lighthouse\">Google Lighthouse\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>PageSpeed Insights:\u003C/strong> Google’s PageSpeed Insights analyzes the content of a web page and generates suggestions to make it faster.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://developers.google.com/speed/pagespeed/insights/\">PageSpeed Insights\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>WebPageTest:\u003C/strong> An open-source tool that provides detailed performance analysis, including CRP insights.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://www.webpagetest.org/\">WebPageTest\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Critical:\u003C/strong> A Node.js module for extracting and inlining critical-path CSS.\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/addyosmani/critical\">Critical on GitHub\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"in-summary\">In summary\u003C/h3>\n\u003Cp>Understanding and optimizing the Critical Rendering Path is essential for enhancing web performance. By focusing on efficient HTML, CSS, and JavaScript delivery, you can ensure faster load times and a better user experience. Utilize the tools and techniques discussed to analyze and optimize your web pages, making them more responsive and user-friendly.\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cem>Sources:\u003C/em>\u003C/p>\n\u003Col>\n\u003Cli>\u003Ca href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/\">Google Developers: Critical Rendering Path\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model\">MDN Web Docs: CSS Object Model (CSSOM)\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://developers.google.com/speed/docs/insights/OptimizeCSSDelivery\">Google Developers: Optimize CSS Delivery\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://developers.google.com/web/tools/lighthouse\">Lighthouse Documentation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://developers.google.com/speed/pagespeed/insights/\">PageSpeed Insights\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://www.webpagetest.org/\">WebPageTest\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/addyosmani/critical\">Critical GitHub Repository\u003C/a>\u003C/li>\n\u003C/ol>\n\u003Cp>These resources provide in-depth information on CRP and tools for optimizing web performance.\u003C/p>\n\u003Cp>\u003Cem>Together, we build better code!\u003C/em>\u003C/p>",{"headings":406,"localImagePaths":450,"remoteImagePaths":451,"frontmatter":452,"imagePaths":455},[407,410,413,416,419,422,425,428,431,434,437,440,443,446,449],{"depth":82,"slug":408,"text":409},"understanding-the-critical-rendering-path-crp-in-web-development","Understanding the Critical Rendering Path (CRP) in Web Development",{"depth":82,"slug":411,"text":412},"what-is-the-critical-rendering-path","What is the Critical Rendering Path?",{"depth":82,"slug":414,"text":415},"steps-of-the-critical-rendering-path","Steps of the Critical Rendering Path",{"depth":88,"slug":417,"text":418},"1-parsing-html-and-building-the-dom","1. Parsing HTML and Building the DOM",{"depth":88,"slug":420,"text":421},"2-parsing-css-and-building-the-cssom","2. Parsing CSS and Building the CSSOM",{"depth":88,"slug":423,"text":424},"3-creating-the-render-tree","3. Creating the Render Tree",{"depth":88,"slug":426,"text":427},"4-layout","4. Layout",{"depth":88,"slug":429,"text":430},"5-painting","5. Painting",{"depth":82,"slug":432,"text":433},"optimizing-the-critical-rendering-path","Optimizing the Critical Rendering Path",{"depth":88,"slug":435,"text":436},"1-minimize-critical-resources","1. Minimize Critical Resources",{"depth":88,"slug":438,"text":439},"2-defer-non-essential-javascript","2. Defer Non-Essential JavaScript",{"depth":88,"slug":441,"text":442},"3-optimize-css-delivery","3. Optimize CSS Delivery",{"depth":88,"slug":444,"text":445},"4-minimize-render-blocking-resources","4. Minimize Render-Blocking Resources",{"depth":82,"slug":447,"text":448},"tools-and-resources-for-crp-optimization","Tools and Resources for CRP Optimization",{"depth":82,"slug":49,"text":50},[],[],{"title":391,"publishDate":453,"img":398,"img_alt":399,"description":392,"tags":454},["Date","2024-12-20T00:00:00.000Z"],[18,19,395,396,397],[],"en/CRP-you-need-to-know.md","work",["Map",459,460,487,488,555,556,587,588,615,616,639,640,665,666,717,718,743,744],"en/face-recognition",{"id":459,"data":461,"body":470,"filePath":471,"digest":472,"rendered":473,"legacyId":486},{"title":462,"description":463,"publishDate":464,"tags":465,"img":468,"img_alt":469},"Face Recognition","This repository contains a simple Python script for real-time face detection using OpenCV. The script captures video from the default camera, detects faces in each frame, and draws rectangles around the detected faces.\n",["Date","2023-12-02T00:00:00.000Z"],[466,467],"Python","OpenCV","https://wallpapers.com/images/high/face-recognition-1600-x-900-wallpaper-o3rh0wpg6lwsir6q.webp","Face recognition with python","This repository contains a simple Python script for real-time face detection using OpenCV. The script captures video from the default camera, detects faces in each frame, and draws rectangles around the detected faces.\n\n##### Repo\n\n\u003Chttps://github.com/SergioCampbell/faceReconition>","src/content/work/en/face-recognition.md","e24d657a1ce000f7",{"html":474,"metadata":475},"\u003Cp>This repository contains a simple Python script for real-time face detection using OpenCV. The script captures video from the default camera, detects faces in each frame, and draws rectangles around the detected faces.\u003C/p>\n\u003Ch5 id=\"repo\">Repo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://github.com/SergioCampbell/faceReconition\">https://github.com/SergioCampbell/faceReconition\u003C/a>\u003C/p>",{"headings":476,"localImagePaths":480,"remoteImagePaths":481,"frontmatter":482,"imagePaths":485},[477],{"depth":33,"slug":478,"text":479},"repo","Repo",[],[],{"title":462,"publishDate":483,"img":468,"img_alt":469,"description":463,"tags":484},["Date","2023-12-02T00:00:00.000Z"],[466,467],[],"en/face-recognition.md","en/financial-app-fullstack",{"id":487,"data":489,"body":505,"filePath":506,"digest":507,"rendered":508,"legacyId":554},{"title":490,"description":491,"publishDate":492,"tags":493,"img":503,"img_alt":504},"BudgetGenius Hexagonal Architecture and PWA Approach","BudgetGenius is a personal finance application built from scratch as a functional, modular, and scalable MVP. In this post, we share its architecture, key technical decisions, services built, and the technology stack used, including PWA support, OAuth2 authentication, and full cloud deployment.\n",["Date","2025-05-28T00:00:00.000Z"],[18,494,495,496,497,498,499,500,501,502],"Dev","User Testing","Logic","Fintech","MVP","NestJS","React","PWA","HexagonalArchitecture","https://www.photo-pick.com/online/api/v1/albums/efdbc017-11d2-4eaf-b71c-da8be94efaf2.jpg","Iridescent ripples of a bright blue and pink liquid","#### 🧠 Project Overview\n\nGoal: Allow users to easily manage their personal finances from any device, visualizing key metrics and spending patterns.\nCurrent Features:\n\nGoogle sign-up and login (OAuth2).\nDashboard with a monthly summary.\nBreakdown of expenses by category.\nTransaction management (create, edit, delete).\nResponsive UX with support for app installation (PWA).\nInteractive charts for visual insights.\n\n#### 🏗️ Architecture: Hexagonal (Ports & Adapters)\n\nWe applied the hexagonal architecture pattern to decouple domains from infrastructure and prepare the code for scalability and testing.\n\ngraph LR\n  A[Controllers (Adapters)] --> B[Application Services]\n  B --> C[Domain (Entities, Use Cases)]\n  B --> D[Ports (Interfaces)]\n  D --> E[Repositories (Adapters)]\n  D --> F[External APIs (Google, Redis)]\n  E --> G[PostgreSQL]\n  \nThis structure allows us to:\n\nEasily test business rules (pure domain).\nChange providers without altering core logic.\nAdapt the backend to other frontends (mobile, CLI, etc.).\n\n#### 🧰 Technologies Used\n\n🔙 Backend (NestJS + TypeORM)\nNestJS as a scalable framework with support for testing and dependency injection.\nTypeORM + PostgreSQL for ORM and relational database.\nRedis for caching (tokens, sessions).\nPassport.js + OAuth2 for Google authentication.\nJWT for access and refresh tokens.\nHexagonal architecture to separate domain, application, and infrastructure.\n\n#### 🎨 Frontend (React + TailwindCSS)\n\nReact with Hooks and Context for lightweight state management.\nTailwindCSS for a modern and responsive UI.\nRecharts for interactive charts (pie, bar, etc.).\nlocalStorage for token persistence (PWA-ready).\nReact Router DOM for declarative navigation.\n\n#### 📦 Infraestructura y despliegue\n\nFirebase Hosting for frontend + PWA + automatic HTTPS.\nRender.com for the backend with externally connected PostgreSQL and Redis.\nGoogle Cloud Console for OAuth2 configuration.\nCORS, CSRF, and environment-controlled security.\n\n#### 🌐 Navegación de usuario y flujos\n\n🧭 General Navigation Flow\n\ngraph LR\n  A[Login con Google] --> B[Callback Backend]\n  B --> C[Generar Tokens]\n  C --> D[Redirige al Front con tokens]\n  D --> E[Guardar tokens en localStorage]\n  E --> F[Dashboard]\n  F --> G[Consulta de gastos]\n  F --> H[Crear/editar transacción]\n  F --> I[Ver breakdown de categorías]\n\n🧪 Key Use Cases\n\ngraph LR\n  A[Usuario autenticado] --> B[GET /overview]\n  A --> C[GET /categories]\n  A --> D[POST /transaction]\n  A --> E[PUT /transaction/:id]\n  A --> F[DELETE /transaction/:id]\n\n#### 🔐 Key Technical Decisions\n\n✅ 1. Passwordless OAuth\nUsers created via Google have no password (null) and are authenticated solely via OAuth.\nThis is managed without affecting authorization flows or persistence.\n\n✅ 2. JWT + localStorage for PWA\nMigrated from httpOnly cookies to localStorage to enable BudgetGenius's use as a Progressive Web App.\nThis also facilitates offline functionality and background retries.\n\n✅ 3. Firebase Hosting for Frontend\nLeverages PWA, HTTPS, telemetry, redirects, and more.\nReplaced Vercel to centralize on a platform offering better browser integration.\n\n#### 📊 Charts and Data Visualization\n\nAn ExpenseCategories component was included with real-time visualization of:\n\nTotal expenses\nMost expensive category\nPercentage distribution with colors and tooltips These metrics come from a single overviewService.getBreakdownByCategory() service, reused across multiple views, adhering to the DRY principle.\n\n#### 📈 Current Outcome\n\n✔️ Functional MVP deployed\n\n✔️ Users can authenticate and use the app\n\n✔️ Complete Infrastructure: DB, backend, frontend, and OAuth\n\n✔️ Solid foundation to continue scaling to premium features\n\n#### 📝 Next Steps\n\nFull offline support (background transactions)\nPush notifications with Firebase\nPremium subscriptions and payment gateway\nFinancial data export (CSV, PDF)\n\n#### 📎 Conclusion\n\nBudgetGenius demonstrates how it's possible to build a functional, robust, and modern app with open-source tools, good practices, and long-term architectural decisions.\nWe hope this experience serves as a guide for your next MVP, startup, or learning project.\nWant to explore the code or contribute?\n\n- 🌐  Live demo [Budget Genius IA](https://budgetgeniusia.web.app)\n\n- 🔗 Fullstack Repository (NestJS) (private repo)\n\n##### 🧠 Interested in building something similar?\n\nFollow us on LinkedIn or contact us to collaborate 🚀","src/content/work/en/financial-app-fullstack.md","f7291b90995240b2",{"html":509,"metadata":510},"\u003Ch4 id=\"-project-overview\">🧠 Project Overview\u003C/h4>\n\u003Cp>Goal: Allow users to easily manage their personal finances from any device, visualizing key metrics and spending patterns.\nCurrent Features:\u003C/p>\n\u003Cp>Google sign-up and login (OAuth2).\nDashboard with a monthly summary.\nBreakdown of expenses by category.\nTransaction management (create, edit, delete).\nResponsive UX with support for app installation (PWA).\nInteractive charts for visual insights.\u003C/p>\n\u003Ch4 id=\"️-architecture-hexagonal-ports--adapters\">🏗️ Architecture: Hexagonal (Ports &#x26; Adapters)\u003C/h4>\n\u003Cp>We applied the hexagonal architecture pattern to decouple domains from infrastructure and prepare the code for scalability and testing.\u003C/p>\n\u003Cp>graph LR\nA[Controllers (Adapters)] —> B[Application Services]\nB —> C[Domain (Entities, Use Cases)]\nB —> D[Ports (Interfaces)]\nD —> E[Repositories (Adapters)]\nD —> F[External APIs (Google, Redis)]\nE —> G[PostgreSQL]\u003C/p>\n\u003Cp>This structure allows us to:\u003C/p>\n\u003Cp>Easily test business rules (pure domain).\nChange providers without altering core logic.\nAdapt the backend to other frontends (mobile, CLI, etc.).\u003C/p>\n\u003Ch4 id=\"-technologies-used\">🧰 Technologies Used\u003C/h4>\n\u003Cp>🔙 Backend (NestJS + TypeORM)\nNestJS as a scalable framework with support for testing and dependency injection.\nTypeORM + PostgreSQL for ORM and relational database.\nRedis for caching (tokens, sessions).\nPassport.js + OAuth2 for Google authentication.\nJWT for access and refresh tokens.\nHexagonal architecture to separate domain, application, and infrastructure.\u003C/p>\n\u003Ch4 id=\"-frontend-react--tailwindcss\">🎨 Frontend (React + TailwindCSS)\u003C/h4>\n\u003Cp>React with Hooks and Context for lightweight state management.\nTailwindCSS for a modern and responsive UI.\nRecharts for interactive charts (pie, bar, etc.).\nlocalStorage for token persistence (PWA-ready).\nReact Router DOM for declarative navigation.\u003C/p>\n\u003Ch4 id=\"-infraestructura-y-despliegue\">📦 Infraestructura y despliegue\u003C/h4>\n\u003Cp>Firebase Hosting for frontend + PWA + automatic HTTPS.\nRender.com for the backend with externally connected PostgreSQL and Redis.\nGoogle Cloud Console for OAuth2 configuration.\nCORS, CSRF, and environment-controlled security.\u003C/p>\n\u003Ch4 id=\"-navegación-de-usuario-y-flujos\">🌐 Navegación de usuario y flujos\u003C/h4>\n\u003Cp>🧭 General Navigation Flow\u003C/p>\n\u003Cp>graph LR\nA[Login con Google] —> B[Callback Backend]\nB —> C[Generar Tokens]\nC —> D[Redirige al Front con tokens]\nD —> E[Guardar tokens en localStorage]\nE —> F[Dashboard]\nF —> G[Consulta de gastos]\nF —> H[Crear/editar transacción]\nF —> I[Ver breakdown de categorías]\u003C/p>\n\u003Cp>🧪 Key Use Cases\u003C/p>\n\u003Cp>graph LR\nA[Usuario autenticado] —> B[GET /overview]\nA —> C[GET /categories]\nA —> D[POST /transaction]\nA —> E[PUT /transaction/:id]\nA —> F[DELETE /transaction/:id]\u003C/p>\n\u003Ch4 id=\"-key-technical-decisions\">🔐 Key Technical Decisions\u003C/h4>\n\u003Cp>✅ 1. Passwordless OAuth\nUsers created via Google have no password (null) and are authenticated solely via OAuth.\nThis is managed without affecting authorization flows or persistence.\u003C/p>\n\u003Cp>✅ 2. JWT + localStorage for PWA\nMigrated from httpOnly cookies to localStorage to enable BudgetGenius’s use as a Progressive Web App.\nThis also facilitates offline functionality and background retries.\u003C/p>\n\u003Cp>✅ 3. Firebase Hosting for Frontend\nLeverages PWA, HTTPS, telemetry, redirects, and more.\nReplaced Vercel to centralize on a platform offering better browser integration.\u003C/p>\n\u003Ch4 id=\"-charts-and-data-visualization\">📊 Charts and Data Visualization\u003C/h4>\n\u003Cp>An ExpenseCategories component was included with real-time visualization of:\u003C/p>\n\u003Cp>Total expenses\nMost expensive category\nPercentage distribution with colors and tooltips These metrics come from a single overviewService.getBreakdownByCategory() service, reused across multiple views, adhering to the DRY principle.\u003C/p>\n\u003Ch4 id=\"-current-outcome\">📈 Current Outcome\u003C/h4>\n\u003Cp>✔️ Functional MVP deployed\u003C/p>\n\u003Cp>✔️ Users can authenticate and use the app\u003C/p>\n\u003Cp>✔️ Complete Infrastructure: DB, backend, frontend, and OAuth\u003C/p>\n\u003Cp>✔️ Solid foundation to continue scaling to premium features\u003C/p>\n\u003Ch4 id=\"-next-steps\">📝 Next Steps\u003C/h4>\n\u003Cp>Full offline support (background transactions)\nPush notifications with Firebase\nPremium subscriptions and payment gateway\nFinancial data export (CSV, PDF)\u003C/p>\n\u003Ch4 id=\"-conclusion\">📎 Conclusion\u003C/h4>\n\u003Cp>BudgetGenius demonstrates how it’s possible to build a functional, robust, and modern app with open-source tools, good practices, and long-term architectural decisions.\nWe hope this experience serves as a guide for your next MVP, startup, or learning project.\nWant to explore the code or contribute?\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>🌐  Live demo \u003Ca href=\"https://budgetgeniusia.web.app\">Budget Genius IA\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>🔗 Fullstack Repository (NestJS) (private repo)\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"-interested-in-building-something-similar\">🧠 Interested in building something similar?\u003C/h5>\n\u003Cp>Follow us on LinkedIn or contact us to collaborate 🚀\u003C/p>",{"headings":511,"localImagePaths":548,"remoteImagePaths":549,"frontmatter":550,"imagePaths":553},[512,515,518,521,524,527,530,533,536,539,542,545],{"depth":88,"slug":513,"text":514},"-project-overview","🧠 Project Overview",{"depth":88,"slug":516,"text":517},"️-architecture-hexagonal-ports--adapters","🏗️ Architecture: Hexagonal (Ports & Adapters)",{"depth":88,"slug":519,"text":520},"-technologies-used","🧰 Technologies Used",{"depth":88,"slug":522,"text":523},"-frontend-react--tailwindcss","🎨 Frontend (React + TailwindCSS)",{"depth":88,"slug":525,"text":526},"-infraestructura-y-despliegue","📦 Infraestructura y despliegue",{"depth":88,"slug":528,"text":529},"-navegación-de-usuario-y-flujos","🌐 Navegación de usuario y flujos",{"depth":88,"slug":531,"text":532},"-key-technical-decisions","🔐 Key Technical Decisions",{"depth":88,"slug":534,"text":535},"-charts-and-data-visualization","📊 Charts and Data Visualization",{"depth":88,"slug":537,"text":538},"-current-outcome","📈 Current Outcome",{"depth":88,"slug":540,"text":541},"-next-steps","📝 Next Steps",{"depth":88,"slug":543,"text":544},"-conclusion","📎 Conclusion",{"depth":33,"slug":546,"text":547},"-interested-in-building-something-similar","🧠 Interested in building something similar?",[],[],{"title":490,"publishDate":551,"img":503,"img_alt":504,"description":491,"tags":552},["Date","2025-05-28T00:00:00.000Z"],[18,494,495,496,497,498,499,500,501,502],[],"en/financial-app-fullstack.md","en/marvel-aniversary",{"id":555,"data":557,"body":566,"filePath":567,"digest":568,"rendered":569,"legacyId":586},{"title":558,"description":559,"publishDate":560,"tags":561,"img":564,"img_alt":565},"Marvel aniversary v1","A demostration about Bootstrap 5 and some custom elements with React and arrowing to Marvels endpoints showing UCM characters and comics Marvel Studios.\n",["Date","2019-12-01T00:00:00.000Z"],[494,500,562,563],"Bootstrap","Api","https://i.imgur.com/mEDuDpi.jpg","A bright pink sheet of paper used to wrap flowers curves in front of rich blue background","This project was bootstrapped with Create React App. In this case I use React Router Dom to comunicate the navigation in the app; Bootstrap 5 just to make it friendly 😅 and the atomic design pattern (try to make every single tag to an atom and them to component 🤯).\n\n##### Notes\n\nThe PUBLIC AND PRIVATE KEY´s it located in the config file (you have to use your own keis available in your personal Marvel Account )\n\n##### Repo\n\n\u003Chttps://github.com/SergioCampbell/Marvel>\n\n##### Demo\n\n here: \u003Chttps://marvel-sacv.web.app>","src/content/work/en/marvel-aniversary.md","0d5cd222be0621c2",{"html":570,"metadata":571},"\u003Cp>This project was bootstrapped with Create React App. In this case I use React Router Dom to comunicate the navigation in the app; Bootstrap 5 just to make it friendly 😅 and the atomic design pattern (try to make every single tag to an atom and them to component 🤯).\u003C/p>\n\u003Ch5 id=\"notes\">Notes\u003C/h5>\n\u003Cp>The PUBLIC AND PRIVATE KEY´s it located in the config file (you have to use your own keis available in your personal Marvel Account )\u003C/p>\n\u003Ch5 id=\"repo\">Repo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://github.com/SergioCampbell/Marvel\">https://github.com/SergioCampbell/Marvel\u003C/a>\u003C/p>\n\u003Ch5 id=\"demo\">Demo\u003C/h5>\n\u003Cp>here: \u003Ca href=\"https://marvel-sacv.web.app\">https://marvel-sacv.web.app\u003C/a>\u003C/p>",{"headings":572,"localImagePaths":580,"remoteImagePaths":581,"frontmatter":582,"imagePaths":585},[573,576,577],{"depth":33,"slug":574,"text":575},"notes","Notes",{"depth":33,"slug":478,"text":479},{"depth":33,"slug":578,"text":579},"demo","Demo",[],[],{"title":558,"publishDate":583,"img":564,"img_alt":565,"description":559,"tags":584},["Date","2019-12-01T00:00:00.000Z"],[494,500,562,563],[],"en/marvel-aniversary.md","en/react-chat-firebase",{"id":587,"data":589,"body":599,"filePath":600,"digest":601,"rendered":602,"legacyId":614},{"title":590,"description":591,"publishDate":592,"tags":593,"img":597,"img_alt":598},"React Chat with Firebase","Little chat using React and Firebase. The authentication is enable with Google account.\n",["Date","2019-10-02T00:00:00.000Z"],[594,595,596],"Design","react","Firebase","https://i.imgur.com/Ztq8vSa.png","Soft pink and baby blue water ripples together in a subtle texture.","Little chat using React and Firebase. The authentication is enable with Google account.\n\n##### Repo\n\n\u003Chttps://github.com/SergioCampbell/ReactChat>\n\n##### Demo\n\n\u003Chttps://chat-react-c9d77.web.app>","src/content/work/en/react-chat-firebase.md","11229c4124e9b257",{"html":603,"metadata":604},"\u003Cp>Little chat using React and Firebase. The authentication is enable with Google account.\u003C/p>\n\u003Ch5 id=\"repo\">Repo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://github.com/SergioCampbell/ReactChat\">https://github.com/SergioCampbell/ReactChat\u003C/a>\u003C/p>\n\u003Ch5 id=\"demo\">Demo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://chat-react-c9d77.web.app\">https://chat-react-c9d77.web.app\u003C/a>\u003C/p>",{"headings":605,"localImagePaths":608,"remoteImagePaths":609,"frontmatter":610,"imagePaths":613},[606,607],{"depth":33,"slug":478,"text":479},{"depth":33,"slug":578,"text":579},[],[],{"title":590,"publishDate":611,"img":597,"img_alt":598,"description":591,"tags":612},["Date","2019-10-02T00:00:00.000Z"],[594,595,596],[],"en/react-chat-firebase.md","en/timesheet",{"id":615,"data":617,"body":623,"filePath":624,"digest":625,"rendered":626,"legacyId":638},{"title":618,"description":619,"publishDate":620,"tags":621,"img":622,"img_alt":504},"Timesheet","This project has been created using webpack-cli, typescript and react than basically takes hours and calculate the time deppending of the date.\n",["Date","2020-03-02T00:00:00.000Z"],[18,494,495,496],"https://i.postimg.cc/0kKBXLnN/Screenshot-2022-11-15-at-19-59-44-React-with-Webpack.png","This project has been created using webpack-cli, typescript and react.\n\nBefore start you have to run this commnad to install all dev dependencies npm install\n\nit's important to validate because there are some loader to convert typescript code to javascript code.\n\nOnce installed run this command to start locally:\n\nnow you can run npm run dev\n\nand to bundle the application run npm run build or yarn build\n\n##### Repo\n\n\u003Chttps://github.com/SergioCampbell/timesheet>\n\n##### Demo\n\n\u003Chttps://sergiocampbell.github.io/timesheet>","src/content/work/en/timeSheet.md","c87de0f853d66dac",{"html":627,"metadata":628},"\u003Cp>This project has been created using webpack-cli, typescript and react.\u003C/p>\n\u003Cp>Before start you have to run this commnad to install all dev dependencies npm install\u003C/p>\n\u003Cp>it’s important to validate because there are some loader to convert typescript code to javascript code.\u003C/p>\n\u003Cp>Once installed run this command to start locally:\u003C/p>\n\u003Cp>now you can run npm run dev\u003C/p>\n\u003Cp>and to bundle the application run npm run build or yarn build\u003C/p>\n\u003Ch5 id=\"repo\">Repo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://github.com/SergioCampbell/timesheet\">https://github.com/SergioCampbell/timesheet\u003C/a>\u003C/p>\n\u003Ch5 id=\"demo\">Demo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://sergiocampbell.github.io/timesheet\">https://sergiocampbell.github.io/timesheet\u003C/a>\u003C/p>",{"headings":629,"localImagePaths":632,"remoteImagePaths":633,"frontmatter":634,"imagePaths":637},[630,631],{"depth":33,"slug":478,"text":479},{"depth":33,"slug":578,"text":579},[],[],{"title":618,"publishDate":635,"img":622,"img_alt":504,"description":619,"tags":636},["Date","2020-03-02T00:00:00.000Z"],[18,494,495,496],[],"en/timeSheet.md","en/video-chat",{"id":639,"data":641,"body":650,"filePath":651,"digest":652,"rendered":653,"legacyId":664},{"title":642,"description":643,"publishDate":644,"tags":645,"img":649,"img_alt":504},"Video Chat App","This project is crafted with the latest technologies, including React for a dynamic and interactive front end, TypeScript for type-safe code, WebRTC for peer-to-peer video communication, Socket.io for real-time WebSocket connections, and Node.js powering the backend 🚀.\n",["Date","2020-03-02T00:00:00.000Z"],[18,494,495,19,500,646,647,648],"Socket.io","WebRTC","CSS3","https://i.postimg.cc/KzSd7wC7/Captura-de-pantalla-2023-12-04-222723.png","Real-Time Video Chat: Connect with friends and colleagues instantly through high-quality video calls. React & TypeScript: Utilize the power of React for a responsive and intuitive user interface, with TypeScript ensuring a robust and statically-typed codebase. WebRTC: Experience smooth and secure peer-to-peer video communication using the WebRTC protocol. Socket.io: Enable real-time bidirectional event-based communication between clients and the server, ensuring instant updates and synchronization. Node.js: Empower the backend with Node.js, allowing for scalable and efficient server-side operations.\n\n##### Repo\n\n\u003Chttps://github.com/SergioCampbell/video-chat>","src/content/work/en/video-chat.md","eb3801b7573ffba7",{"html":654,"metadata":655},"\u003Cp>Real-Time Video Chat: Connect with friends and colleagues instantly through high-quality video calls. React &#x26; TypeScript: Utilize the power of React for a responsive and intuitive user interface, with TypeScript ensuring a robust and statically-typed codebase. WebRTC: Experience smooth and secure peer-to-peer video communication using the WebRTC protocol. Socket.io: Enable real-time bidirectional event-based communication between clients and the server, ensuring instant updates and synchronization. Node.js: Empower the backend with Node.js, allowing for scalable and efficient server-side operations.\u003C/p>\n\u003Ch5 id=\"repo\">Repo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://github.com/SergioCampbell/video-chat\">https://github.com/SergioCampbell/video-chat\u003C/a>\u003C/p>",{"headings":656,"localImagePaths":658,"remoteImagePaths":659,"frontmatter":660,"imagePaths":663},[657],{"depth":33,"slug":478,"text":479},[],[],{"title":642,"publishDate":661,"img":649,"img_alt":504,"description":643,"tags":662},["Date","2020-03-02T00:00:00.000Z"],[18,494,495,19,500,646,647,648],[],"en/video-chat.md","es/financial-app-fullstack",{"id":665,"data":667,"body":673,"filePath":674,"digest":675,"rendered":676,"legacyId":716},{"title":668,"description":669,"publishDate":670,"tags":671,"img":503,"img_alt":504},"BudgetGenius arquitectura hexagonal y enfoque PWA","BudgetGenius es una aplicación de finanzas personales construida desde cero como un MVP funcional, modular y escalable. En este post, te compartimos la arquitectura, decisiones técnicas clave, servicios construidos y el stack tecnológico usado, incluyendo soporte para PWA, autenticación OAuth2 y despliegue completo en la nube.\n",["Date","2025-05-28T00:00:00.000Z"],[18,494,495,496,497,498,499,500,501,672],"ArquitecturaHexagonal","#### 🧠 Visión general del proyecto\n\nObjetivo: Permitir que usuarios puedan gestionar sus finanzas personales fácilmente desde cualquier dispositivo, visualizando métricas clave y patrones de gasto.\nFuncionalidades actuales:\nRegistro e inicio de sesión con Google (OAuth2).\nDashboard con resumen mensual.\nBreakdown por categoría de gastos.\nGestión de transacciones (crear, editar, eliminar).\nUX responsiva con soporte para instalación como app (PWA).\nGráficas interactivas para insights visuales.\n\n#### 🏗️ Arquitectura: Hexagonal (Ports & Adapters)\n\nAplicamos el patrón de arquitectura hexagonal para desacoplar dominios de infraestructura y preparar el código para escalabilidad y pruebas.\n\ngraph LR\n  A[Controllers (Adapters)] --> B[Application Services]\n  B --> C[Domain (Entities, Use Cases)]\n  B --> D[Ports (Interfaces)]\n  D --> E[Repositories (Adapters)]\n  D --> F[External APIs (Google, Redis)]\n  E --> G[PostgreSQL]\n  \nEsta estructura nos permite:\nTestear fácilmente reglas de negocio (dominio puro).\nCambiar proveedores sin alterar la lógica central.\nAdaptar el backend a otros frontends (mobile, CLI, etc.).\n\n#### 🧰 Tecnologías utilizadas\n\n🔙 Backend (NestJS + TypeORM)\nNestJS como framework escalable con soporte para testing e inyección de dependencias.\nTypeORM + PostgreSQL para ORM y base de datos relacional.\nRedis para caching (tokens, sesiones).\nPassport.js + OAuth2 para autenticación con Google.\nJWT para tokens de acceso y refresh.\nArquitectura hexagonal para separar dominio, aplicación e infraestructura.\n\n#### 🎨 Frontend (React + TailwindCSS)\n\nReact con Hooks y Context para gestión de estado ligero.\nTailwindCSS para UI moderna y responsiva.\nRecharts para gráficas interactivas (pie, bar, etc.).\nlocalStorage para persistencia de tokens (PWA-ready).\nReact Router DOM para navegación declarativa.\n\n#### 📦 Infraestructura y despliegue\n\nFirebase Hosting para el frontend + PWA + HTTPS automático.\nRender.com para el backend con PostgreSQL y Redis conectados externamente.\nGoogle Cloud Console para configurar OAuth2.\nCORS, CSRF y seguridad por entorno controlada.\n\n#### 🌐 Navegación de usuario y flujos\n\n🧭 Flujo de navegación general\n\ngraph LR\n  A[Login con Google] --> B[Callback Backend]\n  B --> C[Generar Tokens]\n  C --> D[Redirige al Front con tokens]\n  D --> E[Guardar tokens en localStorage]\n  E --> F[Dashboard]\n  F --> G[Consulta de gastos]\n  F --> H[Crear/editar transacción]\n  F --> I[Ver breakdown de categorías]\n\n🧪 Casos de uso principales\n\ngraph LR\n  A[Usuario autenticado] --> B[GET /overview]\n  A --> C[GET /categories]\n  A --> D[POST /transaction]\n  A --> E[PUT /transaction/:id]\n  A --> F[DELETE /transaction/:id]\n\n#### 🔐 Decisiones técnicas clave\n\n✅ 1. OAuth sin contraseña\nUsuarios creados vía Google no tienen password (null) y son autenticados solo vía OAuth.\nEsto se maneja sin afectar flujos de autorización ni persistencia.\n✅ 2. JWT + localStorage para PWA\nSe migró de cookies httpOnly a localStorage para permitir el uso de BudgetGenius como Progressive Web App.\nEsto también facilita el funcionamiento offline y reintentos en background.\n✅ 3. Firebase Hosting para frontend\nPermite aprovechar PWA, HTTPS, telemetría, redirects y más.\nReemplazamos Vercel para centralizar en una plataforma que ofrece mejor integración con el navegador.\n\n#### 📊 Gráficas y visualización de datos\n\nSe incluyó un componente ExpenseCategories con visualización en tiempo real de:\nTotal de gastos\nCategoría más costosa\nDistribución porcentual con colores y tooltips\nEstas métricas vienen de un único servicio overviewService.getBreakdownByCategory() reutilizado en varias vistas, cumpliendo el principio DRY.\n\n#### 📈 Resultado actual\n\n✔️ MVP funcional desplegado\n\n✔️ Usuarios pueden autenticarse y usar la app\n\n✔️ Infraestructura completa: BD, backend, frontend y OAuth\n\n✔️ Base sólida para continuar escalando a features premium\n\n#### 📝 Próximos pasos\n\nSoporte offline completo (transacciones en background)\nNotificaciones push con Firebase\nSubscripciones premium y pasarela de pagos\nExportación de datos financieros (CSV, PDF)\n\n#### 📎 Entonces\n\nBudgetGenius demuestra cómo es posible construir una app funcional, robusta y moderna con herramientas open-source, buenas prácticas y decisiones arquitectónicas pensadas a largo plazo.\nEsperamos que esta experiencia te sirva como guía para tu próximo MVP, startup o proyecto de aprendizaje.\n¿Quieres explorar el código o contribuir?\n\n- 🌐  Demostración [Budget Genius IA](https://budgetgeniusia.web.app)\n\n- 🔗 Repositorio Fullstack (NestJS) (private repo)\n\n##### 🧠 ¿Te interesa construir algo similar?\n\nSíguenos en LinkedIn o contáctanos para colaborar 🚀","src/content/work/es/financial-app-fullstack.md","2ac73fbcc2dbcc3f",{"html":677,"metadata":678},"\u003Ch4 id=\"-visión-general-del-proyecto\">🧠 Visión general del proyecto\u003C/h4>\n\u003Cp>Objetivo: Permitir que usuarios puedan gestionar sus finanzas personales fácilmente desde cualquier dispositivo, visualizando métricas clave y patrones de gasto.\nFuncionalidades actuales:\nRegistro e inicio de sesión con Google (OAuth2).\nDashboard con resumen mensual.\nBreakdown por categoría de gastos.\nGestión de transacciones (crear, editar, eliminar).\nUX responsiva con soporte para instalación como app (PWA).\nGráficas interactivas para insights visuales.\u003C/p>\n\u003Ch4 id=\"️-arquitectura-hexagonal-ports--adapters\">🏗️ Arquitectura: Hexagonal (Ports &#x26; Adapters)\u003C/h4>\n\u003Cp>Aplicamos el patrón de arquitectura hexagonal para desacoplar dominios de infraestructura y preparar el código para escalabilidad y pruebas.\u003C/p>\n\u003Cp>graph LR\nA[Controllers (Adapters)] —> B[Application Services]\nB —> C[Domain (Entities, Use Cases)]\nB —> D[Ports (Interfaces)]\nD —> E[Repositories (Adapters)]\nD —> F[External APIs (Google, Redis)]\nE —> G[PostgreSQL]\u003C/p>\n\u003Cp>Esta estructura nos permite:\nTestear fácilmente reglas de negocio (dominio puro).\nCambiar proveedores sin alterar la lógica central.\nAdaptar el backend a otros frontends (mobile, CLI, etc.).\u003C/p>\n\u003Ch4 id=\"-tecnologías-utilizadas\">🧰 Tecnologías utilizadas\u003C/h4>\n\u003Cp>🔙 Backend (NestJS + TypeORM)\nNestJS como framework escalable con soporte para testing e inyección de dependencias.\nTypeORM + PostgreSQL para ORM y base de datos relacional.\nRedis para caching (tokens, sesiones).\nPassport.js + OAuth2 para autenticación con Google.\nJWT para tokens de acceso y refresh.\nArquitectura hexagonal para separar dominio, aplicación e infraestructura.\u003C/p>\n\u003Ch4 id=\"-frontend-react--tailwindcss\">🎨 Frontend (React + TailwindCSS)\u003C/h4>\n\u003Cp>React con Hooks y Context para gestión de estado ligero.\nTailwindCSS para UI moderna y responsiva.\nRecharts para gráficas interactivas (pie, bar, etc.).\nlocalStorage para persistencia de tokens (PWA-ready).\nReact Router DOM para navegación declarativa.\u003C/p>\n\u003Ch4 id=\"-infraestructura-y-despliegue\">📦 Infraestructura y despliegue\u003C/h4>\n\u003Cp>Firebase Hosting para el frontend + PWA + HTTPS automático.\nRender.com para el backend con PostgreSQL y Redis conectados externamente.\nGoogle Cloud Console para configurar OAuth2.\nCORS, CSRF y seguridad por entorno controlada.\u003C/p>\n\u003Ch4 id=\"-navegación-de-usuario-y-flujos\">🌐 Navegación de usuario y flujos\u003C/h4>\n\u003Cp>🧭 Flujo de navegación general\u003C/p>\n\u003Cp>graph LR\nA[Login con Google] —> B[Callback Backend]\nB —> C[Generar Tokens]\nC —> D[Redirige al Front con tokens]\nD —> E[Guardar tokens en localStorage]\nE —> F[Dashboard]\nF —> G[Consulta de gastos]\nF —> H[Crear/editar transacción]\nF —> I[Ver breakdown de categorías]\u003C/p>\n\u003Cp>🧪 Casos de uso principales\u003C/p>\n\u003Cp>graph LR\nA[Usuario autenticado] —> B[GET /overview]\nA —> C[GET /categories]\nA —> D[POST /transaction]\nA —> E[PUT /transaction/:id]\nA —> F[DELETE /transaction/:id]\u003C/p>\n\u003Ch4 id=\"-decisiones-técnicas-clave\">🔐 Decisiones técnicas clave\u003C/h4>\n\u003Cp>✅ 1. OAuth sin contraseña\nUsuarios creados vía Google no tienen password (null) y son autenticados solo vía OAuth.\nEsto se maneja sin afectar flujos de autorización ni persistencia.\n✅ 2. JWT + localStorage para PWA\nSe migró de cookies httpOnly a localStorage para permitir el uso de BudgetGenius como Progressive Web App.\nEsto también facilita el funcionamiento offline y reintentos en background.\n✅ 3. Firebase Hosting para frontend\nPermite aprovechar PWA, HTTPS, telemetría, redirects y más.\nReemplazamos Vercel para centralizar en una plataforma que ofrece mejor integración con el navegador.\u003C/p>\n\u003Ch4 id=\"-gráficas-y-visualización-de-datos\">📊 Gráficas y visualización de datos\u003C/h4>\n\u003Cp>Se incluyó un componente ExpenseCategories con visualización en tiempo real de:\nTotal de gastos\nCategoría más costosa\nDistribución porcentual con colores y tooltips\nEstas métricas vienen de un único servicio overviewService.getBreakdownByCategory() reutilizado en varias vistas, cumpliendo el principio DRY.\u003C/p>\n\u003Ch4 id=\"-resultado-actual\">📈 Resultado actual\u003C/h4>\n\u003Cp>✔️ MVP funcional desplegado\u003C/p>\n\u003Cp>✔️ Usuarios pueden autenticarse y usar la app\u003C/p>\n\u003Cp>✔️ Infraestructura completa: BD, backend, frontend y OAuth\u003C/p>\n\u003Cp>✔️ Base sólida para continuar escalando a features premium\u003C/p>\n\u003Ch4 id=\"-próximos-pasos\">📝 Próximos pasos\u003C/h4>\n\u003Cp>Soporte offline completo (transacciones en background)\nNotificaciones push con Firebase\nSubscripciones premium y pasarela de pagos\nExportación de datos financieros (CSV, PDF)\u003C/p>\n\u003Ch4 id=\"-entonces\">📎 Entonces\u003C/h4>\n\u003Cp>BudgetGenius demuestra cómo es posible construir una app funcional, robusta y moderna con herramientas open-source, buenas prácticas y decisiones arquitectónicas pensadas a largo plazo.\nEsperamos que esta experiencia te sirva como guía para tu próximo MVP, startup o proyecto de aprendizaje.\n¿Quieres explorar el código o contribuir?\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>🌐  Demostración \u003Ca href=\"https://budgetgeniusia.web.app\">Budget Genius IA\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>🔗 Repositorio Fullstack (NestJS) (private repo)\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"-te-interesa-construir-algo-similar\">🧠 ¿Te interesa construir algo similar?\u003C/h5>\n\u003Cp>Síguenos en LinkedIn o contáctanos para colaborar 🚀\u003C/p>",{"headings":679,"localImagePaths":710,"remoteImagePaths":711,"frontmatter":712,"imagePaths":715},[680,683,686,689,690,691,692,695,698,701,704,707],{"depth":88,"slug":681,"text":682},"-visión-general-del-proyecto","🧠 Visión general del proyecto",{"depth":88,"slug":684,"text":685},"️-arquitectura-hexagonal-ports--adapters","🏗️ Arquitectura: Hexagonal (Ports & Adapters)",{"depth":88,"slug":687,"text":688},"-tecnologías-utilizadas","🧰 Tecnologías utilizadas",{"depth":88,"slug":522,"text":523},{"depth":88,"slug":525,"text":526},{"depth":88,"slug":528,"text":529},{"depth":88,"slug":693,"text":694},"-decisiones-técnicas-clave","🔐 Decisiones técnicas clave",{"depth":88,"slug":696,"text":697},"-gráficas-y-visualización-de-datos","📊 Gráficas y visualización de datos",{"depth":88,"slug":699,"text":700},"-resultado-actual","📈 Resultado actual",{"depth":88,"slug":702,"text":703},"-próximos-pasos","📝 Próximos pasos",{"depth":88,"slug":705,"text":706},"-entonces","📎 Entonces",{"depth":33,"slug":708,"text":709},"-te-interesa-construir-algo-similar","🧠 ¿Te interesa construir algo similar?",[],[],{"title":668,"publishDate":713,"img":503,"img_alt":504,"description":669,"tags":714},["Date","2025-05-28T00:00:00.000Z"],[18,494,495,496,497,498,499,500,501,672],[],"es/financial-app-fullstack.md","en/filter",{"id":717,"data":719,"body":727,"filePath":728,"digest":729,"rendered":730,"legacyId":742},{"title":720,"description":721,"publishDate":722,"tags":723,"img":725,"img_alt":726},"Filter","The project is to write a function that searches through NBA player heights based on user input. \n",["Date","2019-12-01T00:00:00.000Z"],[494,500,724,563],"logic","https://i.imgur.com/a8gzh0N.png","A filter created with react","This app takes a single integer input. The application will download the raw data from the website bellow (\u003Chttps://mach-eight.uc.r.appspot.com>) and print a list of all pairs of players whose height in inches adds up to the integer input to the application. If no matches are found, the application will print \"No matches found\".\n\n- The project is to write a function that searches through NBA player heights based on user input.\n- The raw data is taken from [here](https://www.openintro.org/data/index.php?data=nba_heights).\n- The data is served in json format by the endpoint [here](https://mach-eight.uc.r.appspot.com/).\n\n##### Repo\n\n\u003Chttps://github.com/SergioCampbell/filter>\n\n##### Demo\n\n here: \u003Chttps://sergiocampbell.github.io/filter>","src/content/work/en/filter.md","579fb39d9f69be59",{"html":731,"metadata":732},"\u003Cp>This app takes a single integer input. The application will download the raw data from the website bellow (\u003Ca href=\"https://mach-eight.uc.r.appspot.com\">https://mach-eight.uc.r.appspot.com\u003C/a>) and print a list of all pairs of players whose height in inches adds up to the integer input to the application. If no matches are found, the application will print “No matches found”.\u003C/p>\n\u003Cul>\n\u003Cli>The project is to write a function that searches through NBA player heights based on user input.\u003C/li>\n\u003Cli>The raw data is taken from \u003Ca href=\"https://www.openintro.org/data/index.php?data=nba_heights\">here\u003C/a>.\u003C/li>\n\u003Cli>The data is served in json format by the endpoint \u003Ca href=\"https://mach-eight.uc.r.appspot.com/\">here\u003C/a>.\u003C/li>\n\u003C/ul>\n\u003Ch5 id=\"repo\">Repo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://github.com/SergioCampbell/filter\">https://github.com/SergioCampbell/filter\u003C/a>\u003C/p>\n\u003Ch5 id=\"demo\">Demo\u003C/h5>\n\u003Cp>here: \u003Ca href=\"https://sergiocampbell.github.io/filter\">https://sergiocampbell.github.io/filter\u003C/a>\u003C/p>",{"headings":733,"localImagePaths":736,"remoteImagePaths":737,"frontmatter":738,"imagePaths":741},[734,735],{"depth":33,"slug":478,"text":479},{"depth":33,"slug":578,"text":579},[],[],{"title":720,"publishDate":739,"img":725,"img_alt":726,"description":721,"tags":740},["Date","2019-12-01T00:00:00.000Z"],[494,500,724,563],[],"en/filter.md","en/podcaster",{"id":743,"data":745,"body":755,"filePath":756,"digest":757,"rendered":758,"legacyId":770},{"title":746,"description":747,"publishDate":748,"tags":749,"img":753,"img_alt":754},"Podcaster","Podcaster is a web application where you can search for the top 100 iTunes podcast artists and hear their content.\nNavigate filtering by podcast title or artist name, select the card and check it content.\n",["Date","2023-12-23T00:00:00.000Z"],[500,750,594,21,396,751,752,18],"Next.js","CORS","Responsive","https://cdn.pixabay.com/photo/2025/05/26/17/31/ai-generated-9623791_1280.png","Pearls of silky soft white cotton, bubble up under vibrant lighting","Podcaster is a web application where you can search for the top 100 iTunes podcast artists and hear their content.\nNavigate filtering by podcast title or artist name, select the card and check it content.\n\nFeel free to navigate through the repository and/or test it.\n\n##### Repo\n\n\u003Chttps://github.com/SergioCampbell/podcaster>\n\n##### Demo\n\n\u003Chttps://podcaster-delta.vercel.app/>","src/content/work/en/podcaster.md","76b6a151f0972039",{"html":759,"metadata":760},"\u003Cp>Podcaster is a web application where you can search for the top 100 iTunes podcast artists and hear their content.\nNavigate filtering by podcast title or artist name, select the card and check it content.\u003C/p>\n\u003Cp>Feel free to navigate through the repository and/or test it.\u003C/p>\n\u003Ch5 id=\"repo\">Repo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://github.com/SergioCampbell/podcaster\">https://github.com/SergioCampbell/podcaster\u003C/a>\u003C/p>\n\u003Ch5 id=\"demo\">Demo\u003C/h5>\n\u003Cp>\u003Ca href=\"https://podcaster-delta.vercel.app/\">https://podcaster-delta.vercel.app/\u003C/a>\u003C/p>",{"headings":761,"localImagePaths":764,"remoteImagePaths":765,"frontmatter":766,"imagePaths":769},[762,763],{"depth":33,"slug":478,"text":479},{"depth":33,"slug":578,"text":579},[],[],{"title":746,"publishDate":767,"img":753,"img_alt":754,"description":747,"tags":768},["Date","2023-12-23T00:00:00.000Z"],[500,750,594,21,396,751,752,18],[],"en/podcaster.md"]